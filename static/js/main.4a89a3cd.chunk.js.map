{"version":3,"sources":["others/shared_functions.js","components/Spinner.jsx","store/userInfo-slice.js","others/shared_vars.js","components/Login.jsx","components/Registration.jsx","icons/x-lg.svg","icons/info.svg","store/status-slice.js","components/Friend.jsx","components/ChatWindowModal.jsx","components/ChatWindow.jsx","icons/group-icon.svg","icons/arrow-left.svg","components/NewChat.jsx","components/AddFriend.jsx","components/Chat.jsx","components/ChatPeopleList.jsx","icons/chat-fill.svg","icons/people-fill.svg","components/ChatPeopleToggle.jsx","icons/log-out.svg","icons/pencil-fill.svg","icons/person-plus-fill.svg","components/Main.jsx","store/index.js","App.js","store/userInfo-actions.js","reportWebVitals.js","index.js"],"names":["StringToColor","string","sum","charCodeAt","MobileViewSide","viewSide","show","hide","console","log","sideDisplayed","document","querySelector","originalClassList","classList","value","split","filter","e","trim","length","uniqueClassList","Set","modifiedClassList","remove","add","sideHidden","SaveUserInfo","userInfo","Storage","localStorage","ChatUserInfo","JSON","stringify","className","role","userInfoSlice","createSlice","name","initialState","username","token","isLoading","reducers","setUserInfo","state","action","payload","setIsLoading","increment","counter","decrement","increase","toggleCounter","showCounter","userInfoActions","actions","http_url","Login","loggedIn","history","useHistory","dispatch","useDispatch","useState","setUsername","password","setPassword","onChange","event","type","target","VisitorSignIn","undefined","fetch","method","headers","body","then","response","json","data","non_field_errors","to","onSubmit","preventDefault","TextField","id","placeholder","Button","variant","onClick","push","Spinner","Registration","SetUserInfoProp","password2","setPassword2","keys","Object","find","key","error","statusSlice","chats","friends","currentChat","chatHistory","setChats","addChat","setFriends","addFriend","setCurrentChat","setChatHistory","statusActions","Friend","friend","onClickFriend","checked","changeCheck","isFriend","style","backgroundColor","disabled","useStyles","makeStyles","topScrollPaper","alignItems","ChatWindowModal","prop","members","useSelector","status","Dialog","open","modalOpen","onClose","setModalOpenProp","container","position","BackdropProps","componentsProps","padding","DialogTitle","map","member","ChatWindow","inputOn","socket","newChatData","mobileViewSide","room_id","useParams","chatTitle","setChatTitle","content","setContent","scroll","useRef","setDisabled","setModalOpen","useEffect","current","scrollTop","scrollHeight","groupName","displayedChat","chat","GetChatTitle","newChatMembers","Intl","DateTimeFormat","resolvedOptions","timeZone","messages","message","sender","datetime","time","src","xIcon","infoIcon","ref","url","send","sendMessage","autocomplete","autoFocus","NewChat","location","useLocation","section","setSection","setGroupName","setInputOn","checkedUsers","setCheckedUsers","newChat","setNewChatData","user","new_message","groupIcon","add_participants","arrowLeftIcon","concat","add_title","required","send_message","page","AddFriend","query","setQuery","suggestions","setSuggestions","new_suggestion","ok","suggestion","URLSearchParams","searchResult","Chat","path","chatName","otherMembers","slice","ChatPeopleList","showChat","setChatHistoryProp","rooms","ChatPeopleToggle","ChatPeopleSwitch","chat_fill","people_fill","Main","setShowChat","profilePage","ProfileOn","a","catch","logoutIcon","profile","display","personPlusIcon","replace","pencilIcon","store","configureStore","reducer","App","setSocket","chat_id","pathname","W3CWebSocket","ws_url","fetchData","storedInfo","Authorization","Error","parse","userData","getState","authorization","onopen","onmessage","room","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a89a3cd.chunk.js","sourcesContent":["function convertTZ(date, tzString) {\r\n  return new Date(\r\n    (typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {\r\n      timeZone: tzString,\r\n    })\r\n  );\r\n}\r\n\r\nexport function StringToColor(string) {\r\n  let colorMap = {\r\n    0: \"#313E50\",\r\n    1: \"#924C5D\",\r\n    2: \"#C5867A\",\r\n    3: \"#E1915E\",\r\n    4: \"#E17F5E\",\r\n    5: \"#85A47A\",\r\n  };\r\n\r\n  let sum = 0;\r\n  for (let char of string) {\r\n    sum += char.charCodeAt(0);\r\n  }\r\n\r\n  return colorMap[sum % 6];\r\n}\r\n\r\nexport function MobileViewSide(viewSide) {\r\n  let show;\r\n  let hide;\r\n  if (viewSide === \"left\") {\r\n    show = \"left\";\r\n    hide = \"right\";\r\n  } else if (viewSide === \"right\") {\r\n    show = \"right\";\r\n    hide = \"left\";\r\n  } else {\r\n    console.log(\"invalide viewSide for MobileViewSide function\");\r\n    return;\r\n  }\r\n  // add className of \"ShowIfMobile\" to the element that will be displayed\r\n  let sideDisplayed = document.querySelector(`.${show}`);\r\n  let originalClassList = sideDisplayed.classList.value\r\n    .split(/(\\s+)/)\r\n    .filter(function (e) {\r\n      return e.trim().length > 0;\r\n    });\r\n  let uniqueClassList = [...new Set(originalClassList)];\r\n  let modifiedClassList = uniqueClassList.filter(\r\n    (e) => !(e === \"HideIfMobile\" || e === \"ShowIfMobile\")\r\n  );\r\n  sideDisplayed.classList.remove(...originalClassList);\r\n  sideDisplayed.classList.add(...[...modifiedClassList, \"ShowIfMobile\"]);\r\n\r\n  // add className of \"HideIfMobile\" to the element that will be displayed\r\n  let sideHidden = document.querySelector(`.${hide}`);\r\n  if (!sideHidden) {\r\n    console.log(\"no side to hide\");\r\n    return;\r\n  }\r\n  console.log(\"side hidden\", sideHidden);\r\n  originalClassList = sideHidden?.classList?.value\r\n    ?.split(/(\\s+)/)\r\n    .filter(function (e) {\r\n      return e.trim().length > 0;\r\n    });\r\n  uniqueClassList = [...new Set(originalClassList)];\r\n  modifiedClassList = uniqueClassList.filter(\r\n    (e) => !(e === \"HideIfMobile\" || e === \"ShowIfMobile\")\r\n  );\r\n  sideHidden.classList.remove(...originalClassList);\r\n  sideHidden.classList.add(...[...modifiedClassList, \"HideIfMobile\"]);\r\n  return;\r\n}\r\n\r\nexport function SaveUserInfo(userInfo) {\r\n  if (typeof Storage !== \"undefined\") {\r\n    if (!userInfo) localStorage.ChatUserInfo = null;\r\n    else localStorage.ChatUserInfo = JSON.stringify(userInfo);\r\n    console.log(\"user info saved in local storage\");\r\n  } else {\r\n    console.log(\"unable to use localStorage\");\r\n  }\r\n}\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function GetChatTitle(currentChat, chats, userInfo) {\r\n  let displayedChat;\r\n  if (!currentChat) return undefined;\r\n  displayedChat = chats?.find((chat) => chat.id == currentChat);\r\n\r\n  if (displayedChat?.name) return displayedChat.name;\r\n  else {\r\n    return displayedChat?.members?.find(\r\n      (member) => member !== userInfo?.username\r\n    );\r\n  }\r\n}\r\n","export default function() {\r\n    return  <>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</>;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { username: null, token: null, isLoading: true };\r\n\r\nconst userInfoSlice = createSlice({\r\n  name: \"userInfo\",\r\n  initialState,\r\n  reducers: {\r\n    setUserInfo(state, action) {\r\n      state.username = action.payload.username;\r\n      state.token = action.payload.token;\r\n      state.isLoading = action.payload.isLoading\r\n        ? action.payload.isLoading\r\n        : action.payload.isLoading === false\r\n        ? action.payload.isLoading\r\n        : state.isLoading;\r\n    },\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload;\r\n    },\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nexport const userInfoActions = userInfoSlice.actions;\r\n\r\nexport default userInfoSlice;\r\n","// const http_url = \"http://127.0.0.1:8000\";\r\n\r\n// const ws_url = \"ws://127.0.0.1:8000\";\r\n\r\nconst http_url = \"https://mk-chat-be.herokuapp.com\";\r\nconst ws_url = \"wss://mk-chat-be.herokuapp.com\";\r\n\r\nexport { http_url, ws_url };\r\n","import React, { useState, useEffect } from \"react\";\r\n// import './Chat.css;'\r\nimport {SaveUserInfo} from \"../others/shared_functions\";\r\nimport Spinner from './Spinner';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {userInfoActions} from \"../store/userInfo-slice\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    Redirect,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\n\r\nexport default function Login({loggedIn}) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch(); \r\n    const [username, setUsername] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/api-token-auth/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        })\r\n        .then(response => {\r\n            setIsLoading(false);\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            if (data?.token) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                // SetUserInfoProp({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (data?.non_field_errors) {\r\n                console.log('error message', data.non_field_errors);\r\n            }\r\n        });\r\n    }\r\n    \r\n    function onChange(event, type) {\r\n        if (type === \"username\")\r\n            setUsername(event.target.value);\r\n        else if (type === \"password\") \r\n            setPassword(event.target.value); \r\n    }\r\n\r\n    function VisitorSignIn(type) {\r\n        let username = undefined;\r\n        let password = undefined;\r\n        console.log(type); \r\n        if (type === 1) {\r\n            username = 'visitor1';\r\n            password = '123';\r\n        } else if  (type === 2) {\r\n            username = 'visitor2';\r\n            password = '123';\r\n        }\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/api-token-auth/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setIsLoading(false);\r\n            if (data.token) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                // SetUserInfoProp({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (data.non_field_errors) {\r\n                console.log('error message', data.non_field_errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    return  (loggedIn? <Redirect to='/' /> \r\n    :\r\n    <div className='login'>\r\n        <form onSubmit={onSubmit} className='login-form'>\r\n            <TextField id=\"outlined-basic\" type=\"text\" placeholder=\"id\" onChange={(event)=>onChange(event, 'username')} value={username} />\r\n            <TextField id=\"outlined-password-input\" type=\"password\" placeholder=\"password\" onChange={(event)=>onChange(event, 'password')} value={password} />\r\n            <Button variant=\"contained\" type=\"submit\">log in</Button>\r\n        </form>\r\n        <div>do not have an account yet?</div>\r\n        <div className='creat-new-account'><Button variant=\"contained\" onClick={()=>history.push('/register')}>Create a New Account</Button></div>\r\n        <div>want to try the app without registering?</div>\r\n        <div className = 'visitor-sign-in'><Button variant=\"contained\"  onClick={() => VisitorSignIn(1)}>sign in as visitor1</Button></div>\r\n        <div className = 'visitor-sign-in'><Button variant=\"contained\"  onClick={() => VisitorSignIn(2)}>sign in as visitor2</Button></div>\r\n        {isLoading&&<Spinner />}\r\n    </div>\r\n    );\r\n        // <form onSubmit={onSubmit}>\r\n        //     <input type=\"text\" placeholder=\"id\" onChange={(event)=>onChange(event, 'username')} value={username} />\r\n        //     <input type=\"password\" placeholder=\"password\" onChange={(event)=>onChange(event, 'password')} value={password} />\r\n        //     <button type=\"submit\">log in</button>\r\n        // </form>\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SaveUserInfo} from \"../others/shared_functions\";\r\nimport Spinner from './Spinner';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    Redirect,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport { userInfoActions } from \"../store/userInfo-slice\";\r\n\r\nexport default function Registration({userInfo, loggedIn, SetUserInfoProp}) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [password2, setPassword2] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        // let content = {id, pwd};]\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/registration', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password, password2})\r\n        })\r\n        .then(response => {\r\n            setIsLoading(false);\r\n            return response.json();})\r\n        .then(data => {\r\n            console.log(data);\r\n            let keys = Object.keys(data)\r\n            if (keys.find(key => key === \"token\")) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                // SetUserInfoProp({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (keys.find(key => key === \"error\")) {\r\n                console.log('error message', data.error);\r\n            }\r\n        });\r\n    }\r\n    \r\n    function onChange(event, type) {\r\n        if (type === \"username\")\r\n            setUsername(event.target.value);\r\n        else if (type === \"password\") \r\n            setPassword(event.target.value); \r\n        else if (type == \"password2\")\r\n            setPassword2(event.target.value); \r\n    }\r\n\r\n    if (loggedIn) return <Redirect to='/' />\r\n\r\n    return <>\r\n    <div className = \"registration\">\r\n    {isLoading&&<Spinner/>}\r\n        <form onSubmit={onSubmit}>\r\n            <TextField id=\"outlined-basic\" placeholder=\"id\" onChange={(event)=>onChange(event, 'username')} value={username} />\r\n            <TextField id=\"outlined-password-input\" type=\"password\" placeholder=\"password\" onChange={(event)=>onChange(event, 'password')} value={password} />\r\n            <TextField id=\"outlined-password-input\" type=\"password\" placeholder=\"retype password\" onChange={(event)=>onChange(event, 'password2')} value={password2} />\r\n            <Button variant=\"contained\" type=\"submit\">register</Button>\r\n        </form> \r\n    <div>Already registered? <Button variant=\"contained\" onClick={()=>history.push('/login')}>Go to sign in page</Button></div>  \r\n    </div>\r\n    \r\n    </>;\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/x-lg.db763ca8.svg\";","export default __webpack_public_path__ + \"static/media/info.f4a46c68.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  chats: [],\r\n  friends: [],\r\n  currentChat: null,\r\n  chatHistory: null,\r\n};\r\n\r\nconst statusSlice = createSlice({\r\n  name: \"status\",\r\n  initialState,\r\n  reducers: {\r\n    setChats(state, action) {\r\n      state.chats = action.payload.chats;\r\n    },\r\n    addChat(state, action) {\r\n      state.chats.push(action.payload);\r\n    },\r\n    setFriends(state, action) {\r\n      state.friends = action.payload.friends;\r\n    },\r\n    addFriend(state, action) {\r\n      state.friends.push(action.payload);\r\n    },\r\n    setCurrentChat(state, action) {\r\n      state.currentChat = action.payload;\r\n    },\r\n    setChatHistory(state, action) {\r\n      state.chatHistory = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const statusActions = statusSlice.actions;\r\n\r\nexport default statusSlice;\r\n","import React from \"react\";\r\nimport './Friend.css';\r\nimport {StringToColor} from '../others/shared_functions';\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function Friend ({friend, onClickFriend, checked, changeCheck, isFriend, addFriend}) {\r\n    \r\n    const style = {backgroundColor: StringToColor(friend)}; \r\n    \r\n    if (changeCheck || addFriend) {\r\n        return <>\r\n        <div className='friend additional-field' onClick = {() => onClickFriend(friend)}>\r\n            <div>\r\n                <div className='userIcon' style={style}>\r\n                    {friend[0]}\r\n                </div>\r\n                {friend}\r\n            </div>\r\n            {changeCheck&& <input type='checkbox' checked={checked} onChange={changeCheck} />}\r\n            {addFriend&& \r\n                <Button \r\n                    value={friend} \r\n                    disabled={isFriend} \r\n                    onClick={e=>addFriend(e)}\r\n                >\r\n                 {isFriend? 'added': 'add'} \r\n                 </Button>}\r\n        </div>\r\n    </>    \r\n    }\r\n    \r\n    return <>\r\n        <div className='friend' onClick = {() => onClickFriend(friend)}>\r\n            <div className='userIcon' style={style}>\r\n                {friend[0]}\r\n            </div>\r\n            {friend}\r\n        </div>\r\n    </>    \r\n    \r\n    // return <>\r\n    //     <div className='friend' onClick = {() => onClickFriend(friend)}>\r\n    //         <div className='userIcon' style={style}>\r\n    //             {friend[0]}\r\n    //         </div>\r\n    //         {friend}\r\n    //     </div>\r\n    // </>\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\nimport TimeAgo from 'timeago-react';\r\nimport xIcon from \"../icons/x-lg.svg\";\r\nimport infoIcon from \"../icons/info.svg\";\r\nimport { MobileViewSide } from \"../others/shared_functions\";\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {statusActions} from \"../store/status-slice\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Friend from './Friend';\r\n\r\nconst useStyles = makeStyles({\r\n    topScrollPaper: {\r\n      alignItems: \"flex-start\"\r\n    }});\r\n\r\nexport default function ChatWindowModal(prop) {\r\n    const members = useSelector(state => state.status.chatHistory?.members);\r\n\r\n    const classes = useStyles(); \r\n\r\n    if (!members) {\r\n        return null;\r\n    }; \r\n\r\n    return ( <>    \r\n    <Dialog\r\n        open={prop.modalOpen}\r\n        onClose={() => prop.setModalOpenProp(false)}\r\n        container={() => document.querySelector('.chat-window')}\r\n        style={{position: 'absolute'}}\r\n        BackdropProps={{ style: { position: 'absolute' } }}\r\n        componentsProps={{style: { padding: '100' }}}\r\n\r\n        // classes={{\r\n        //     scrollPaper: classes.topScrollPaper}}\r\n\r\n        // aria-labelledby=\"modal-modal-title\"\r\n        // aria-describedby=\"modal-modal-description\"\r\n    >\r\n        <DialogTitle>members</DialogTitle>\r\n        \r\n        {members.map(member => <Friend friend={member} onClickFriend = {() => {return} }/>)}\r\n\r\n    </Dialog>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\nimport TimeAgo from 'timeago-react';\r\nimport xIcon from \"../icons/x-lg.svg\";\r\nimport infoIcon from \"../icons/info.svg\";\r\nimport { MobileViewSide } from \"../others/shared_functions\";\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {statusActions} from \"../store/status-slice\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport ChatWindowModal from './ChatWindowModal';\r\nimport {GetChatTitle} from '../others/shared_functions';\r\n\r\n\r\n\r\nexport default function ChatWindow({inputOn, socket, newChatData, mobileViewSide}) {\r\n\r\n\r\n    const { room_id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const chatHistory = useSelector(state => state.status.chatHistory);\r\n    const currentChat = useSelector(state=> state.status.currentChat);\r\n    const chats = useSelector(state => state.status.chats);\r\n\r\n    const [chatTitle, setChatTitle] = useState(null);\r\n    const [content, setContent] = useState('');\r\n    const scroll = useRef(null);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    function setModalOpenProp (value) {\r\n        setModalOpen(value);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        scroll.current.scrollTop = scroll.current.scrollHeight;\r\n    },[chatHistory])\r\n\r\n    useEffect(() => {\r\n        if (mobileViewSide) MobileViewSide(mobileViewSide);}\r\n    ,[mobileViewSide]);  \r\n\r\n    useEffect(()=>{\r\n    if (room_id) {\r\n        dispatch(statusActions.setCurrentChat(room_id));\r\n        // setChatTitle(GetChatTitle(currentChat, chats, userInfo));\r\n    }\r\n    else dispatch(statusActions.setCurrentChat(null));\r\n\r\n        return () =>{\r\n            dispatch(statusActions.setCurrentChat(null));\r\n        }\r\n    },[room_id])\r\n\r\n    useEffect(()=>\r\n    {\r\n        if (newChatData?.groupName) {\r\n            setChatTitle(newChatData.groupName);\r\n        } else if(newChatData?.members) {\r\n            setChatTitle(newChatData.members[0]);\r\n        } else {\r\n            setChatTitle(GetChatTitle(currentChat, chats, userInfo));\r\n        }\r\n        \r\n    }, [currentChat, newChatData, chats]\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (newChatData?.members) {\r\n            let newChatMembers = [...newChatData.members, userInfo.username];\r\n            dispatch(statusActions.setCurrentChat({newChatMembers}));\r\n        }\r\n    }, [newChatData])\r\n\r\n\r\n\r\n    // if (room_id) setCurrentChatProp(room_id)\r\n    // else setCurrentChatProp(undefined)\r\n    \r\n    // if (room_id) dispatch(statusActions.setCurrentChat(room_id));\r\n    // else dispatch(statusActions.setCurrentChat(null));\r\n\r\n    // useEffect(() => {\r\n    //     console.log('newChatData', newChatData);\r\n    //     console.log('currentChat', currentChat);\r\n    //     if (newChatData?.members) {\r\n    //         console.log('changing chat history', newChatData);\r\n    //         dispatch(statusActions.setChatHistory({members: newChatData.members}));\r\n    //     }\r\n\r\n    // }, [newChatData])\r\n\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        if(socket && room_id && content.trim().length) {\r\n            if(typeof socket === 'object'){\r\n                if (socket.url) socket.send(JSON.stringify({message: content, room_id}));  \r\n            }\r\n        } else if(socket && newChatData && content.trim().length) {\r\n            console.log(\"new chat sent: \", {...newChatData, message: content});\r\n            socket.send(JSON.stringify({...newChatData, message: content})); \r\n            setDisabled(false);        \r\n        }\r\n        setContent('');\r\n    }\r\n    // const newChatData = {\r\n    //     newChat: true,\r\n    //     groupName,\r\n    //     members: checkedUsers,\r\n    //   };\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        if (content.trim().length) {\r\n            console.log(content);\r\n            fetch( http_url + '/chat_app/chat_update/' + room_id, {\r\n                method: 'POST',\r\n                headers: \r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'token '+ userInfo.token, \r\n                    },\r\n                body: JSON.stringify({content}), \r\n            })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                \r\n            }); \r\n        }\r\n        setContent('');\r\n    }\r\n\r\n    function onChange(e) {\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const localTZ = Intl.DateTimeFormat().resolvedOptions().timeZone; \r\n\r\n    const messages = chatHistory?.messages?.map(message => {\r\n        if (userInfo.username===message.sender) {\r\n            return (\r\n                <div className='message-block self'>\r\n                    <div className = 'container'>\r\n                        <div className='content'>\r\n                            {message.content}\r\n                        </div>\r\n                    </div>\r\n                    <div className='time'>\r\n                        {/* {convertTZ(message.time, localTZ).getHours()} */}\r\n                        <TimeAgo datetime={message.time}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='message-block other'>\r\n                    <div className='sender'>\r\n                        {message.sender}\r\n                    </div>\r\n                    <div className='content'>\r\n                        {message.content}\r\n                    </div>\r\n                    <div className='time'>\r\n                        <TimeAgo datetime={message.time}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className = 'right chat-window'>\r\n            <div className = 'right-row1 chat-header'>               \r\n                {/* {newChatData && <div onClick={()=>history.push('/')}> home</div>} */}\r\n                \r\n                {(chatHistory || newChatData) && <>\r\n                    <div>\r\n                        <div className='iconContainer xIconContainer' onClick={()=>history.push('/')}> \r\n                            <img src={xIcon} className='icon' />\r\n                        </div>\r\n                        <div className='chatTitle'>\r\n                            {/* {chatHistory?.messages ? chatTitle\r\n                            :newChatData? newChatData.groupName\r\n                            : null    \r\n                        } */}\r\n                        {chatTitle}\r\n                        </div>\r\n                    </div>\r\n                    <div className='iconContainer' onClick={()=>setModalOpen(true)}> \r\n                        <img src={infoIcon} className='icon' />\r\n                    </div>\r\n                    </>}\r\n            </div>\r\n            <div className = 'right-row2' ref = {scroll}>\r\n                {messages?messages \r\n                : inputOn? <div className='greyed-out'>send a new message</div>\r\n                : <div className='greyed-out'>There are no messages to display. Please select a chat to display messages.</div>}\r\n            </div>\r\n            <div className = 'right-row3'>\r\n                {\r\n                    (messages||inputOn)&& \r\n                    <form onSubmit = {e => sendMessage(e)} autocomplete=\"off\">\r\n                        <div>\r\n                           <TextField id=\"outlined-basic\" variant=\"outlined\" type=\"text\" disabled={disabled} placeholder='Aa' value={content} onChange={e => onChange(e)} autoFocus={true}/>\r\n                        </div>\r\n                    </form>            \r\n                }\r\n            </div>\r\n            < ChatWindowModal \r\n                modalOpen={modalOpen}\r\n                setModalOpenProp={setModalOpenProp}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/group-icon.eb244b39.svg\";","export default __webpack_public_path__ + \"static/media/arrow-left.83aa775a.svg\";","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport Friend from \"./Friend\";\r\nimport { MobileViewSide } from \"../others/shared_functions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { statusActions } from \"../store/status-slice\";\r\nimport xIcon from \"../icons/x-lg.svg\";\r\nimport groupIcon from \"../icons/group-icon.svg\";\r\nimport  {Button, IconButton, TextField }  from '@mui/material';\r\nimport arrowLeftIcon from \"../icons/arrow-left.svg\";\r\n\r\nexport default function NewChat ({ socket, onClickFriend,  mobileViewSide}) {\r\n  \r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const friends = useSelector(state => state.status.friends);\r\n\r\n  const [section, setSection] = useState('new_message');\r\n  const [fullyLoaded, setFullyLoaded] = useState(false);\r\n  const [groupName, setGroupName] = useState('');\r\n  const [inputOn, setInputOn] = useState(null);\r\n  const [checkedUsers, setCheckedUsers] = useState([]);\r\n  const [newChatData, setNewChatData] = useState({\r\n    newChat: true,\r\n    groupName: null,\r\n    members: null,\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    setNewChatData({...newChatData, groupName, members: checkedUsers})\r\n  }, [checkedUsers, groupName])\r\n\r\n  // dispatch(statusActions.setChatHistory(null));\r\n\r\n  useEffect(() => {\r\n    if (mobileViewSide) MobileViewSide(mobileViewSide);}\r\n    ,[mobileViewSide]);  \r\n\r\n  function SwitchInputOn(value) {\r\n    setInputOn(value);\r\n  }\r\n\r\n  // function Change_section (current) {\r\n  //   if (current === 'new_message') {\r\n  //     setSection(new_message);\r\n  //     setInputOn(false);\r\n  //   } else if (current === 'add_participants') {\r\n  //     setSection(add_participants);\r\n  //     setInputOn(false);\r\n  //   } else if (current === 'add_title') {\r\n  //     setSection(add_title);\r\n  //     setInputOn(false);\r\n  //   } else if (current === 'send_message') {\r\n  //     setInputOn(true); \r\n  //   }\r\n  // }\r\n  \r\n  function ChangeCheck(user) {\r\n    // let checkedUsersCopy = [...checkedUsers];\r\n    if (checkedUsers.find(e => e == user)) {\r\n      console.log(user, 'unchecking')\r\n      setCheckedUsers(checkedUsers.filter(e => e !== user));\r\n    } else {\r\n      console.log(user, 'checking')\r\n      setCheckedUsers(checkedUsers.concat([user]));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    MobileViewSide('right');\r\n  },[section]);\r\n\r\n    // console.log('NewChat mounted');\r\n\r\n\r\n    // function ChangeCheck(id) {\r\n    //   // let checkedUsersCopy = [...checkedUsers];\r\n    //   if (checkedUsers.find(user => user == id)) {\r\n    //     console.log(id, 'unchecking')\r\n    //     setCheckedUsers(checkedUsers.filter(user => user !== id));\r\n    //   } else {\r\n    //     console.log(id, 'checking')\r\n    //     setCheckedUsers(checkedUsers.concat([id]));\r\n    //   }\r\n    // }\r\n\r\n  function onSubmit(e) {\r\n    console.log('onSubmit');\r\n    e.preventDefault(); \r\n    if (!groupName.trim()) return ; \r\n    setSection('send_message'); \r\n    setInputOn(true);\r\n  }\r\n\r\n  function handleClick() {\r\n    if (!groupName.trim()) return ; \r\n    setSection('send_message'); \r\n    setInputOn(true);\r\n  }\r\n\r\n  // const newChatData = {\r\n  //   newChat: true,\r\n  //   groupName,\r\n  //   members: checkedUsers,\r\n  // };\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    // if (location.state) {\r\n    //   console.log('location found');\r\n    //   setSection('send_message');\r\n    //   setCheckedUsers([location.state.user]);\r\n    //   setInputOn(true);\r\n    // }\r\n\r\n    if (location.state?.user) {\r\n      console.log('location found', location.state.user);\r\n      if (section !== 'send_message') setSection('send_message');\r\n      if (!inputOn) setInputOn(true);\r\n      if (checkedUsers.length < 2 && location.state.user !== checkedUsers[0]) \r\n      setCheckedUsers([location.state.user]);\r\n      setGroupName('');\r\n    }\r\n  }, [location]);  \r\n\r\n\r\n    // if (location.state?.user) {\r\n    //   console.log('location found');\r\n    //   if (section !== 'send_message') setSection('send_message');\r\n    //   if (!inputOn) setInputOn(true);\r\n    //   if ([location.state.user] !== checkedUsers) \r\n    //   setCheckedUsers([location.state.user]);\r\n    // }\r\n  \r\n\r\n\r\n  const new_message = (\r\n    <div className='NewChat right'>\r\n      <div className='right-row1'>\r\n        <div className='iconContainer xIconContainer' onClick={()=>history.push('/')}> \r\n            <img src={xIcon} className='icon' />\r\n        </div>\r\n        <div >\r\n          New message\r\n        </div>\r\n\r\n        {/* <div>\r\n          New message\r\n        </div>\r\n        <div>\r\n          <button onClick={() => setSection('add_participants')}> Create a New Group </button>\r\n          <button onClick={() => history.push('/')}>home</button>\r\n        </div> */}\r\n      </div>\r\n      <div className='right-row2'>\r\n        <div className = 'create-new-group' onClick={()=>setSection('add_participants')}>\r\n          <div className='iconContainer group'> \r\n              <img src={groupIcon} className='icon' />\r\n          </div>\r\n          <div >\r\n            Create a New Group\r\n          </div>\r\n        </div>\r\n        <div className=\"suggested\">\r\n          Suggested:\r\n        </div>\r\n        {friends?.map(friend => { return (\r\n          // <div onClick={()=>onClickFriend(friend)}>\r\n          //   {friend}\r\n          // </div>\r\n          <Friend friend = {friend} onClickFriend={onClickFriend}/>\r\n        );})}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const add_participants = (\r\n    <div className='NewChat AddParticipants right'>\r\n      <div className='right-row1'>\r\n        <div>\r\n          <div className='iconContainer' onClick={() => setSection('new_message')}> \r\n              <img src={arrowLeftIcon} className='icon' />\r\n          </div>\r\n          Add Participants\r\n        </div>\r\n        <Button id='next-button' onClick={()=>setSection('add_title')} disabled={checkedUsers.length < 2}>\r\n          NEXT\r\n        </Button>       \r\n      </div>\r\n      <div className='right-row2'>\r\n        {friends?.map(friend => {\r\n          // const label = 'friend' + friend.id;\r\n          // const label = friend;\r\n          return (<>\r\n            <div className='friend-checkbox-container'>\r\n              <Friend \r\n              friend = {friend}  \r\n              onClickFriend = {() => null}\r\n              checked={checkedUsers.find(user => user === friend)} \r\n              changeCheck={() => ChangeCheck(friend)}\r\n              />\r\n              {/* <Checkbox label={friend} value={checkedUsers.find(user => user === friend)} changeCheck={() => ChangeCheck(friend)} /> */}\r\n            </div>\r\n            </>);})}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const add_title = (\r\n    <div className = 'NewChat AddTitle right'>\r\n      <div className='right-row1'>\r\n        <div>\r\n            <div className='iconContainer' onClick={() => setSection('add_participants')}> \r\n                <img src={arrowLeftIcon} className='icon' />\r\n            </div>\r\n            Add Title\r\n          </div>\r\n          <Button id='create-button' onClick={handleClick} disabled={!groupName.trim()}>\r\n            CREATE\r\n          </Button> \r\n\r\n        {/* <button onClick={()=>setSection('add_participants')}>back</button>\r\n        Add Title\r\n        <button form='form1' disabled ={!groupName.trim()}> CREATE</button> */}\r\n      </div>\r\n      <div className='right-row2' onSubmit={(e)=>{onSubmit(e)}}>\r\n        <form id=\"form1\">\r\n          {/* <input type='text' placeholder='Group Name (Required)' required=\"required\" value={groupName} onChange={e=>setGroupName(e.target.value)}></input> */}\r\n          <div className='text-field-container'>\r\n            <TextField variant=\"standard\" type='text' placeholder='Group Name (Required)' required=\"required\" value={groupName} onChange={e=>setGroupName(e.target.value)} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n    \r\n  const send_message = <>\r\n    <ChatWindow \r\n    // chatHistory = {chatHistory} \r\n    // setChatHistoryProp={setChatHistoryProp}\r\n    inputOn={inputOn} \r\n    newChatData={newChatData}\r\n    socket={socket}\r\n    />\r\n  </>;\r\n\r\n    // let page = null; \r\n  \r\n    // if (section === 'new_message') {\r\n    //   page = new_message;\r\n    // } else if (section === 'add_participants') {\r\n    //   page = add_participants;\r\n    // } else if (section === 'add_title') {\r\n    //   page = add_title;\r\n    // }\r\n    \r\n  const page = \r\n  section === 'new_message'? new_message\r\n  : section === 'add_participants'? add_participants\r\n  : section === 'add_title'? add_title\r\n  : section === 'send_message'? send_message\r\n  : null; \r\n\r\n  // if (location.state?.user && checkedUsers.length < 2 && location.state?.user !== checkedUsers[0] ) {\r\n  //   return <div className = 'right'></div>; \r\n  // }\r\n\r\n\r\n\r\n  // to directly render send_message page\r\n  if (location.state?.user && section !== 'send_message') {\r\n    return <div className='right'/>  ; \r\n  }\r\n\r\n  return page; \r\n  }\r\n  \r\n  function Checkbox ({label, value, changeCheck}) {\r\n    return (\r\n      <div className='group-participant'>\r\n        <label>\r\n          {/* {label} */}\r\n          <input type='checkbox' checked={value} onChange={changeCheck} ></input>\r\n        </label>\r\n      </div> \r\n      );\r\n  }\r\n  ","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport Friend from \"./Friend\";\r\nimport { MobileViewSide } from \"../others/shared_functions\";\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { statusActions } from \"../store/status-slice\";\r\nimport xIcon from \"../icons/x-lg.svg\"\r\nimport  {Button, IconButton, TextField }  from '@mui/material';\r\n\r\nexport default function AddFriend () {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    dispatch(statusActions.setChatHistory(null));\r\n    const [query, setQuery] = useState(undefined);\r\n    const [suggestions, setSuggestions] = useState(undefined);\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const friends = useSelector(state => state.friends);\r\n\r\n\r\n    useEffect(()=>{\r\n        MobileViewSide('right');\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        fetch( http_url + '/chat_app/add_friend?' + new URLSearchParams({username: query}), {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token,},\r\n        })\r\n        .then(response => {\r\n            if (response.ok) return response.json()\r\n            else return null\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            setSuggestions(data);\r\n        });   \r\n    }\r\n    ,[query])\r\n\r\n    function onChange(e) {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        fetch( http_url + '/chat_app/add_friend?' + new URLSearchParams({username: query}), {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token,},\r\n        })\r\n        .then(response => {\r\n            if (response.ok) return response.json()\r\n            else return null\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            setSuggestions(data);\r\n        });\r\n    }\r\n\r\n    function onClick(e) {\r\n        let username = e.target.value;\r\n        let new_suggestion;\r\n        fetch( http_url + '/chat_app/add_friend', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token},\r\n            body: JSON.stringify({username})\r\n        })\r\n        .then(response => {console.log(response.status, response.ok); if (response.ok)response.json()})\r\n        .then(data => {\r\n            console.log(data);\r\n            new_suggestion = suggestions.map(suggestion => {\r\n                if (suggestion.username === username) return {username, isFriend: true}\r\n                return suggestion;\r\n            })\r\n            setSuggestions(new_suggestion);\r\n            // SetFriendsProp([...friends, username]); \r\n            dispatch(statusActions.addFriend(username));\r\n        });\r\n    } \r\n \r\n\r\n    const searchResult = <div className=\"right-row2>\">\r\n        {suggestions?.map(suggestion => <>\r\n            <Friend \r\n            friend={suggestion.username}\r\n            onClickFriend={()=>null}\r\n            isFriend={suggestion.isFriend}\r\n            addFriend={onClick}\r\n            />\r\n            {/* <div>\r\n                {suggestion.username}\r\n                {suggestion.isFriend ? <span>added</span> \r\n                : <button onClick={e => onClick(e)} value={suggestion.username}> Add</button>}\r\n            </div> */}\r\n        </>\r\n        )}\r\n    </div>;\r\n\r\n    return <>\r\n    <div className=\"right add-friend\">\r\n        <div className=\"right-row1\">\r\n            {/* <div>\r\n                <button onClick={() => history.push('/')}>Home</button>\r\n                Add friends\r\n            </div> */}\r\n            <div className='iconContainer xIconContainer' onClick={()=>history.push('/')}> \r\n                <img src={xIcon} className='icon' />\r\n            </div>\r\n            <div >\r\n                Add friends\r\n            </div>\r\n        </div>\r\n        <div className='right-row2'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='text-field-container'>\r\n                    <TextField variant=\"standard\" type='text' placeholder='search by username' required=\"required\" value={query}  onChange = {e=>onChange(e)} />\r\n                </div>\r\n\r\n                {/* <input type=\"text\" placeholder=\"search by username\" value={query} onChange = {e=>onChange(e)}/> */}\r\n            </form>\r\n        {searchResult}\r\n        </div>\r\n    </div>\r\n    </>;\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\n\r\nimport {StringToColor} from '../others/shared_functions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\nexport default function Chat({chat}) {\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const path = \"/room/\" + chat.id;\r\n    const chatName = chat.name? chat.name \r\n    : chat.members?.length === 2 ? chat.members.find(member => member !== userInfo.username)\r\n    : undefined;\r\n\r\n    let otherMembers = chat?.members.filter(member => member !== userInfo.username);\r\n    \r\n    if (otherMembers?.length > 1) otherMembers = otherMembers.slice(0, 2);\r\n \r\n\r\n    return <>\r\n      <div className='chat' onClick={()=>history.push(path)}>      \r\n        {otherMembers.length > 1 ? (\r\n          <div className = 'userIcon group'> \r\n          {otherMembers.map(member => <div className='userIcon small' style = {{backgroundColor: StringToColor(member)}}> {member[0]} </div>)}\r\n          </div>\r\n          )\r\n        : otherMembers.map(member => \r\n        <div className='userIcon' style = {{backgroundColor: StringToColor(member)}}> \r\n          {member[0]} \r\n        </div>)}\r\n        {chatName}\r\n      </div>\r\n    </>\r\n    // return <Link to={path}>\r\n    //     <div>Chat name: {chat.name}</div>\r\n    // </Link>;\r\n}","import React from \"react\";\r\n// import './ChatPeopleList.css'\r\nimport Friend from \"./Friend.jsx\"\r\nimport Chat from \"./Chat.jsx\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\nexport default function ChatPeopleList({showChat, setChatHistoryProp, rooms, onClickFriend}) {\r\n   // chats = rooms.map(room => {\r\n   //    return <Chat content = {'chat-'+room.id} LoadChat = {LoadChat}/>\r\n   // });\r\n   const userInfo = useSelector(state => state.userInfo);\r\n   const chats = useSelector(state => state.status.chats);\r\n   const friends = useSelector(state => state.status.friends);\r\n\r\n   if (showChat) {\r\n      if (chats) {\r\n         return chats.map(chat => {\r\n            return <Chat chat = {chat} setChatHistoryProp = {setChatHistoryProp}/>\r\n         });     \r\n      } \r\n      return 'no chats';\r\n   } \r\n   \r\n   if (friends) {\r\n      return friends.map(friend => {\r\n         return <Friend friend = {friend} onClickFriend={onClickFriend}/>\r\n      })\r\n   }\r\n   return 'no friends';\r\n   \r\n\r\n   // return showChat?  \r\n   //    chats?.map(chat => {\r\n   //       return <Chat chat = {chat} setChatHistoryProp = {setChatHistoryProp}/>\r\n   //    })\r\n   //     : \r\n   //    friends.map(friend => {\r\n   //       return <Friend friend = {friend}/>\r\n   //    })\r\n\r\n   //     (\r\n   //    <>\r\n   //       <Friend />\r\n   //       <Friend />\r\n   //    </>\r\n   // )\r\n\r\n   // const friend_list = (\r\n   //    <>\r\n   //       <Friend />\r\n   //       <Friend />\r\n   //    </>\r\n   // )\r\n   ;\r\n\r\n   \r\n   // const chat_list = (\r\n   //    <>\r\n   //       <Chat content = {'c1'} LoadChat = {LoadChat}/>\r\n   //       <Chat content = {'c2'} LoadChat = {LoadChat}/>\r\n   //    </>\r\n   // );\r\n\r\n   // return showChat? chat_list : friend_list;\r\n}\r\n\r\n      // <> \r\n      //    <Chat content = {'c1'} LoadChat = {LoadChat}/>\r\n      //    <Chat content = {'c2'} LoadChat = {LoadChat}/>\r\n      // </>","export default __webpack_public_path__ + \"static/media/chat-fill.c06d5871.svg\";","export default __webpack_public_path__ + \"static/media/people-fill.1ec4cb9a.svg\";","import React from \"react\";\r\nimport './ChatPeopleToggle.css'; \r\nimport chat_fill from '../icons/chat-fill.svg'\r\nimport people_fill from '../icons/people-fill.svg'\r\n\r\nexport default function ChatPeopleToggle({ChatPeopleSwitch}) {\r\n\r\n    return <div className = 'ChatPeopleToggle'>\r\n        <div onClick={() => ChatPeopleSwitch(true)}>\r\n            <img className='chat_fill' src={chat_fill}/>\r\n            <div>Chat</div>\r\n        </div>\r\n        <div onClick={() => ChatPeopleSwitch(false)}>\r\n            <img className='people_fill' src={people_fill}/>\r\n            <div>People</div>\r\n        </div>\r\n    </div>;\r\n}","export default __webpack_public_path__ + \"static/media/log-out.a1f930e4.svg\";","export default __webpack_public_path__ + \"static/media/pencil-fill.8f9e674f.svg\";","export default __webpack_public_path__ + \"static/media/person-plus-fill.57f5c296.svg\";","import ChatPeopleList from \"./ChatPeopleList\";\r\nimport ChatPeopleToggle from \"./ChatPeopleToggle\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  userHistory,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { MobileViewSide, SaveUserInfo, StringToColor } from \"../others/shared_functions\";\r\n// import { userInfo2 } from \"../test_vars\";\r\nimport logoutIcon from \"../icons/log-out.svg\";\r\nimport pencilIcon from \"../icons/pencil-fill.svg\";\r\nimport personPlusIcon from \"../icons/person-plus-fill.svg\";\r\nimport xIcon from \"../icons/x-lg.svg\";\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userInfoActions } from \"../store/userInfo-slice\";\r\nimport { statusActionsActions } from \"../store/status-slice\";\r\n\r\n\r\nexport default function Main ({setChatHistoryProp, rooms, onClickFriend}) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector(state => state.userInfo);\r\n  const [showChat, setShowChat] = useState(true);\r\n\r\n  function ChatPeopleSwitch(value) {\r\n    setShowChat(value);\r\n  }\r\n\r\n\r\n  function logout(){\r\n    SaveUserInfo();\r\n    fetch(http_url + '/chat_app/logout', \r\n    {\r\n      headers: {\r\n        'authorization': \"token \" + userInfo.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('logged out');\r\n      console.log(data);\r\n      // setUserInfoProp(undefined);\r\n      dispatch(userInfoActions.setUserInfo({username: null, token: null}));\r\n    }).catch(error => console.error(error));\r\n  }\r\n  // async function logout(){\r\n  //   let response = await fetch( http_url + '/chat_app/logout', \r\n  //   {\r\n  //     headers: {\r\n  //       'authorization': \"token \" + userInfo.token,\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //   }); \r\n  //   let response_json = await response.json();\r\n  //   console.log(response_json);\r\n  // }\r\n\r\n  const profilePage = \r\n    <div className = 'profile-page'>\r\n      <div className = 'profile-header'>\r\n        <div className = 'profile-header-left'>\r\n          <div className='iconContainer' onClick={()=>ProfileOn(false)}>\r\n            <img src={xIcon} className='icon' />\r\n          </div>\r\n          <div>\r\n            Me\r\n          </div>\r\n        </div>\r\n        <div className='iconContainer' onClick={async () => await logout()}>\r\n          <img src={logoutIcon} className='icon' />\r\n        </div>\r\n      </div>\r\n      <div className='userIcon large' style={{backgroundColor: StringToColor(userInfo.username)}}>\r\n        {userInfo.username[0]}\r\n      </div>\r\n      <div className = 'profile-username'>\r\n        {userInfo.username}\r\n      </div>\r\n\r\n    </ div>;\r\n  \r\n  function ProfileOn(state) {\r\n    let profile = document.querySelector('.profile-page');\r\n    if (state) profile.style.display = 'block';\r\n    else profile.style.display = 'none';\r\n  }\r\n\r\n\r\n  return (\r\n    <div className = 'left'>\r\n      {profilePage}\r\n      <div className='left-row1'>\r\n        <div className = \"Header\">\r\n          <div className = 'Header-left'>\r\n            <div className='userIcon' style={{backgroundColor: StringToColor(userInfo.username)}} onClick={()=>ProfileOn(true)}>\r\n                {userInfo.username[0]}\r\n            </div>\r\n            {showChat? 'Chats' : 'People'}\r\n            {/* <div className='ask'>\r\n              ask\r\n            </div> */}\r\n          </div>\r\n\r\n          <div className='buttons'>\r\n            \r\n            {/* <button onClick={()=>history.push('/addfriend')}>add a new friend</button>\r\n            <button onClick={()=>history.push('/newchat')}>\r\n              new chat\r\n            </button> */}\r\n            <div className='iconContainer' onClick={()=>history.push('/addfriend')}>\r\n              <img src={personPlusIcon} className='icon' />\r\n            </div>\r\n            <div className='iconContainer' onClick={()=>history.replace('/newchat')}>\r\n              <img src={pencilIcon} className='icon' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* <div>\r\n          Signed in as: {userInfo.username}\r\n          <div className='iconContainer'>\r\n            <img src={logoutIcon} className='icon' onClick={async () => await logout()}/>\r\n          </div>\r\n        </div> */}\r\n\r\n      </div>\r\n        <div className='left-row2'>\r\n          <ChatPeopleList onClickFriend={onClickFriend} showChat={showChat} setChatHistoryProp={setChatHistoryProp} rooms={rooms}/> \r\n        </div>\r\n        <div className='left-row3'>\r\n          <ChatPeopleToggle ChatPeopleSwitch={ChatPeopleSwitch}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// import counterReducer from \"./counter\";\r\n// import authReducer from \"./auth\";\r\nimport userInfoSlice from \"./userInfo-slice\";\r\nimport statusSlice from \"./status-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    userInfo: userInfoSlice.reducer,\r\n    status: statusSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login\";\r\nimport Registration from \"./components/Registration\";\r\nimport NewChat from \"./components/NewChat\";\r\nimport AddFriend from \"./components/AddFriend\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  Redirect,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport Main from \"./components/Main\";\r\n// import { room1, room2, friend_list, room_list, userInfo2 } from \"./test_vars\";\r\nimport { http_url, ws_url } from \"./others/shared_vars\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  StringToColor,\r\n  MobileViewSide,\r\n  SaveUserInfo,\r\n  GetChatTitle,\r\n} from \"./others/shared_functions\";\r\nimport {\r\n  fetchUserInfo,\r\n  GeneralUpdate,\r\n  FetchMessages,\r\n} from \"./store/userInfo-actions\";\r\nimport { statusActions } from \"./store/status-slice\";\r\n\r\nexport default function App() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const chats = useSelector((state) => state.status.chats);\r\n  const friends = useSelector((state) => state.status.friends);\r\n  const currentChat = useSelector((state) => state.status.currentChat);\r\n  const chatHistory = useSelector((state) => state.status.chatHistory);\r\n\r\n  const [socket, setSocket] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (userInfo.token) {\r\n      setSocket(new W3CWebSocket(ws_url + \"/ws/chat/?token=\" + userInfo.token));\r\n    }\r\n  }, [userInfo.token]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"fetching user info \");\r\n    dispatch(fetchUserInfo());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userInfo.token) dispatch(GeneralUpdate());\r\n    return () => {\r\n      // console.log(\"app unmounting\");\r\n      setSocket({});\r\n    };\r\n  }, [userInfo.token]);\r\n\r\n  useEffect(() => {\r\n    if (currentChat) {\r\n      if (userInfo.token) {\r\n        // used for setting chat info just before sending a new message to create a new chat\r\n        if (Object.keys(currentChat).find((key) => key === \"newChatMembers\")) {\r\n          let members = [...currentChat.newChatMembers];\r\n          dispatch(statusActions.setChatHistory({ members }));\r\n          return;\r\n        }\r\n\r\n        fetch(http_url + \"/chat_app/chat_update/\" + currentChat, {\r\n          headers: { authorization: \"token \" + userInfo.token },\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) return response.json();\r\n            else {\r\n              history.replace(\"/\");\r\n            }\r\n          })\r\n          .then((data) => dispatch(statusActions.setChatHistory(data)))\r\n          .catch((error) => console.error(error));\r\n      }\r\n    } else dispatch(statusActions.setChatHistory(null));\r\n  }, [currentChat, userInfo]);\r\n\r\n  useEffect(() => {\r\n    let data;\r\n    console.log(\"socket is \", socket);\r\n    if (socket.url) {\r\n      console.log(socket);\r\n\r\n      socket.onopen = () => {\r\n        console.log(\"connected to websocket\");\r\n      };\r\n\r\n      socket.onmessage = (e) => {\r\n        console.log(\"onmessage via websocket\");\r\n        data = JSON.parse(e.data);\r\n        console.log(data);\r\n\r\n        // if (Object.keys(data).find((key) => key === \"newChat\")) {\r\n        // }\r\n        if (data.newChat && data.room) {\r\n          dispatch(statusActions.addChat(data.room));\r\n          if (data.sender === userInfo?.username)\r\n            history.replace(`room/${data.room.id}`);\r\n          // else console.log(\"the user is not the sender\");\r\n        } else if (data.message.room_id == currentChat && chatHistory) {\r\n          dispatch(\r\n            statusActions.setChatHistory({\r\n              ...chatHistory,\r\n              messages: [...chatHistory.messages, data.message],\r\n            })\r\n          );\r\n        }\r\n      };\r\n    }\r\n    // return () => {\r\n    //   console.log(\"resetting socket onopen and onmessage\");\r\n    //   socket.onopen = () => null;\r\n    //   socket.onmessage = () => null;\r\n    // };\r\n  }, [socket.url, currentChat, chatHistory, chats, userInfo]);\r\n  // [socket.url, currentChat, chatHistory, chats, userInfo]\r\n\r\n  function onClickFriend(user) {\r\n    let chat_id = chats?.find(\r\n      (chat) =>\r\n        chat.members.length === 2 &&\r\n        chat.members.find((member) => member === user)\r\n    )?.id;\r\n\r\n    if (chat_id) {\r\n      history.push(`/room/${chat_id}`);\r\n    } else {\r\n      console.log(\"redirect\", chat_id);\r\n      history.replace({\r\n        pathname: \"/newchat\",\r\n        state: { user },\r\n      });\r\n    }\r\n  }\r\n\r\n  if (userInfo.isLoading) {\r\n    return null;\r\n  } else if (!userInfo.token) {\r\n    return (\r\n      <>\r\n        <Route path=\"/login\">\r\n          <Login userInfo={null} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Registration userInfo={null} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/login\" />\r\n        </Route>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Main mobileViewSide={\"left\"} onClickFriend={onClickFriend} />\r\n      <Route exact path=\"/\">\r\n        {userInfo.token ? (\r\n          <ChatWindow mobileViewSide={\"left\"} />\r\n        ) : (\r\n          // <div className=\"right empty HideIfMobile\">\r\n          //   There are no messages to display. Please select a chat to display\r\n          //   messages.\r\n          // </div>\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/room/:room_id\">\r\n        <ChatWindow\r\n          // chatTitle={GetChatTitle(currentChat, chats, userInfo)}\r\n          socket={socket}\r\n          mobileViewSide={\"right\"}\r\n        />\r\n      </Route>\r\n      <Route path=\"/newchat\">\r\n        <NewChat\r\n          socket={socket}\r\n          onClickFriend={onClickFriend}\r\n          mobileViewSide={\"right\"}\r\n        />\r\n      </Route>\r\n      <Route path=\"/addfriend\">\r\n        <AddFriend mobileViewSide={\"right\"} />\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login loggedIn={true} />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Registration loggedIn={true} />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n","import { userInfoActions } from \"./userInfo-slice\";\r\nimport { statusActions } from \"./status-slice\";\r\nimport { http_url, ws_url } from \"../others/shared_vars\";\r\nimport store from \"./index\";\r\n\r\nexport const fetchUserInfo = () => {\r\n  return async (dispatch) => {\r\n    if (typeof Storage === \"undefined\") {\r\n      console.log(\"storage undefined\");\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!localStorage.ChatUserInfo) {\r\n      console.log(\"localStorage.ChatUserInfo is undefined\");\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    }\r\n\r\n    const fetchData = async (storedInfo) => {\r\n      console.log(\"stored info\", storedInfo);\r\n      const response = await fetch(http_url + \"/chat_app/user_check\", {\r\n        method: \"GET\",\r\n        headers: { Authorization: \"token \" + storedInfo.token },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch user info!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.username) {\r\n        throw new Error(\"user check failed\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    const storedInfo = JSON.parse(localStorage.ChatUserInfo);\r\n\r\n    try {\r\n      const userData = await fetchData(storedInfo);\r\n      console.log(\"userData\", userData);\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: userData.username,\r\n          token: storedInfo.token,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error.message, \"fetchUserInfo failed\");\r\n\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const GeneralUpdate = () => {\r\n  return async (dispatch) => {\r\n    const state = store.getState();\r\n    console.log(\"general update state\", state);\r\n    const fetchData = async () => {\r\n      const response = await fetch(http_url + \"/chat_app/general_update\", {\r\n        method: \"GET\",\r\n        headers: { Authorization: \"token \" + state.userInfo.token },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"GeneralUpdate failed\");\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      console.log(\"\\n\\n\\n general update \\n\\n\\n\");\r\n      const data = await fetchData();\r\n      console.log(data.rooms);\r\n      console.log(data.friends);\r\n      dispatch(\r\n        statusActions.setChats({\r\n          chats: data.rooms,\r\n        })\r\n      );\r\n      dispatch(\r\n        statusActions.setFriends({\r\n          friends: data.friends,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error.message, \"GeneralUpdate failed\");\r\n    }\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router, Switch, HashRouter } from \"react-router-dom\";\r\nimport store from \"./store/index.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <App />\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}