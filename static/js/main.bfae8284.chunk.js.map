{"version":3,"sources":["others/shared_functions.js","components/Spinner/Spinner.jsx","store/userInfo-slice.js","others/shared_vars.js","components/Login/Login.jsx","components/Registration/Registration.jsx","icons/x-lg.svg","icons/info.svg","store/status-slice.js","components/Friend/Friend.jsx","components/ChatWindowModal/ChatWindowModal.jsx","components/ChatWindow/ChatWindow.jsx","icons/group-icon.svg","icons/arrow-left.svg","components/NewChat/NewChat.jsx","components/AddFriend/AddFriend.jsx","components/Chat/Chat.jsx","components/ChatPeopleList/ChatPeopleList.jsx","icons/chat-fill.svg","icons/people-fill.svg","components/ChatPeopleToggle/ChatPeopleToggle.jsx","icons/log-out.svg","icons/pencil-fill.svg","icons/person-plus-fill.svg","components/Main/Main.jsx","store/index.js","App.js","store/userInfo-actions.js","reportWebVitals.js","index.js"],"names":["StringToColor","string","sum","charCodeAt","MobileViewSide","viewSide","show","hide","console","log","sideDisplayed","document","querySelector","originalClassList","classList","value","split","filter","e","trim","length","uniqueClassList","Set","modifiedClassList","remove","add","sideHidden","SaveUserInfo","userInfo","Storage","localStorage","ChatUserInfo","JSON","stringify","QueryStringGenerator","section","members","groupName","friends","query","URLSearchParams","append","forEach","member","includes","toString","Spinner","className","role","userInfoSlice","createSlice","name","initialState","username","token","isLoading","reducers","setUserInfo","state","action","payload","userInfoActions","actions","http_url","Login","loggedIn","history","useHistory","dispatch","useDispatch","useState","setUsername","password","setPassword","setIsLoading","onChange","event","type","target","VisitorSignIn","undefined","fetch","method","headers","body","then","response","json","data","non_field_errors","alert","to","onSubmit","preventDefault","TextField","id","placeholder","autoComplete","Button","variant","onClick","push","Registration","password2","setPassword2","keys","Object","find","key","error","statusSlice","chats","currentChat","chatHistory","setChats","addChat","setFriends","addFriend","setCurrentChat","setChatHistory","statusActions","Friend","friend","onClickFriend","checked","changeCheck","isFriend","style","backgroundColor","disabled","ChatWindowModal","prop","useSelector","status","Dialog","open","modalOpen","onClose","setModalOpenProp","container","position","BackdropProps","componentsProps","padding","DialogTitle","map","ChatWindow","inputOn","socket","newChatData","mobileViewSide","room_id","useParams","chatTitle","setChatTitle","content","setContent","scroll","useRef","setDisabled","setModalOpen","useEffect","current","scrollTop","scrollHeight","displayedChat","chat","GetChatTitle","newChatMembers","messages","message","sender","datetime","time","src","xIcon","alt","infoIcon","ref","url","send","sendMessage","autoFocus","sections","NewChat","location","useLocation","queryParams","search","queryParamsSection","get","queryParamsMembers","getAll","queryParamsGroupName","setSection","setGroupName","checkedUsers","setCheckedUsers","newChat","setNewChatData","prev","new_message","groupIcon","add_participants","arrowLeftIcon","user","concat","add_title","JumpToSendMessage","required","send_message","AddFriend","setQuery","suggestions","setSuggestions","new_suggestion","ok","suggestion","searchResult","Chat","path","chatName","otherMembers","slice","ChatPeopleList","showChat","setChatHistoryProp","ChatPeopleToggle","ChatPeopleSwitch","chat_fill","people_fill","Main","rooms","setShowChat","profilePage","ProfileOn","a","window","reload","catch","logoutIcon","profile","display","personPlusIcon","pencilIcon","store","configureStore","reducer","App","setSocket","chat_id","getState","fetchData","Authorization","Error","tempSocket","W3CWebSocket","ws_url","close","storedInfo","parse","userData","authorization","replace","onopen","onmessage","room","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfae8284.chunk.js","sourcesContent":["export function convertTZ(date, tzString) {\r\n  return new Date(\r\n    (typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {\r\n      timeZone: tzString,\r\n    })\r\n  );\r\n}\r\n\r\nexport function StringToColor(string) {\r\n  let colorMap = {\r\n    0: \"#313E50\",\r\n    1: \"#924C5D\",\r\n    2: \"#C5867A\",\r\n    3: \"#E1915E\",\r\n    4: \"#E17F5E\",\r\n    5: \"#85A47A\",\r\n  };\r\n\r\n  let sum = 0;\r\n  for (let char of string) {\r\n    sum += char.charCodeAt(0);\r\n  }\r\n\r\n  return colorMap[sum % 6];\r\n}\r\n\r\nexport function MobileViewSide(viewSide) {\r\n  let show;\r\n  let hide;\r\n  if (viewSide === \"left\") {\r\n    show = \"left\";\r\n    hide = \"right\";\r\n  } else if (viewSide === \"right\") {\r\n    show = \"right\";\r\n    hide = \"left\";\r\n  } else {\r\n    console.log(\"invalide viewSide for MobileViewSide function\");\r\n    return;\r\n  }\r\n  // add className of \"ShowIfMobile\" to the element that will be displayed\r\n  let sideDisplayed = document.querySelector(`.${show}`);\r\n  let originalClassList = sideDisplayed.classList.value\r\n    .split(/(\\s+)/)\r\n    .filter(function (e) {\r\n      return e.trim().length > 0;\r\n    });\r\n  let uniqueClassList = [...new Set(originalClassList)];\r\n  let modifiedClassList = uniqueClassList.filter(\r\n    (e) => !(e === \"HideIfMobile\" || e === \"ShowIfMobile\")\r\n  );\r\n  sideDisplayed.classList.remove(...originalClassList);\r\n  sideDisplayed.classList.add(...[...modifiedClassList, \"ShowIfMobile\"]);\r\n\r\n  // add className of \"HideIfMobile\" to the element that will be displayed\r\n  let sideHidden = document.querySelector(`.${hide}`);\r\n  if (!sideHidden) {\r\n    console.log(\"no side to hide\");\r\n    return;\r\n  }\r\n  console.log(\"side hidden\", sideHidden);\r\n  originalClassList = sideHidden?.classList?.value\r\n    ?.split(/(\\s+)/)\r\n    .filter(function (e) {\r\n      return e.trim().length > 0;\r\n    });\r\n  uniqueClassList = [...new Set(originalClassList)];\r\n  modifiedClassList = uniqueClassList.filter(\r\n    (e) => !(e === \"HideIfMobile\" || e === \"ShowIfMobile\")\r\n  );\r\n  sideHidden.classList.remove(...originalClassList);\r\n  sideHidden.classList.add(...[...modifiedClassList, \"HideIfMobile\"]);\r\n  return;\r\n}\r\n\r\nexport function SaveUserInfo(userInfo) {\r\n  if (typeof Storage !== \"undefined\") {\r\n    if (!userInfo) localStorage.ChatUserInfo = null;\r\n    else localStorage.ChatUserInfo = JSON.stringify(userInfo);\r\n    console.log(\"user info saved in local storage\");\r\n  } else {\r\n    console.log(\"unable to use localStorage\");\r\n  }\r\n}\r\n\r\nexport function getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function GetChatTitle(currentChat, chats, userInfo) {\r\n  let displayedChat;\r\n  if (!currentChat) return undefined;\r\n  displayedChat = chats?.find((chat) => chat.id == currentChat);\r\n\r\n  if (displayedChat?.name) return displayedChat.name;\r\n  else {\r\n    return displayedChat?.members?.find(\r\n      (member) => member !== userInfo?.username\r\n    );\r\n  }\r\n}\r\n\r\nexport function QueryStringGenerator(section, members, groupName, friends) {\r\n  let query = new URLSearchParams();\r\n  if (section) {\r\n    query.append(\"section\", section);\r\n  }\r\n\r\n  members.forEach((member) => {\r\n    if (friends.includes(member)) query.append(\"members\", member);\r\n  });\r\n\r\n  if (groupName?.trim()) query.append(\"group_name\", groupName);\r\n  return query.toString();\r\n}\r\n","export default function Spinner () {\r\n    return  <>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</>;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { username: null, token: null, isLoading: true };\r\n\r\nconst userInfoSlice = createSlice({\r\n  name: \"userInfo\",\r\n  initialState,\r\n  reducers: {\r\n    setUserInfo(state, action) {\r\n      state.username = action.payload.username;\r\n      state.token = action.payload.token;\r\n      state.isLoading = action.payload.isLoading\r\n        ? action.payload.isLoading\r\n        : action.payload.isLoading === false\r\n        ? action.payload.isLoading\r\n        : state.isLoading;\r\n    },\r\n  },\r\n});\r\n\r\nexport const userInfoActions = userInfoSlice.actions;\r\n\r\nexport default userInfoSlice;\r\n","// const http_url = \"http://127.0.0.1:8000\";\r\n\r\n// const ws_url = \"ws://127.0.0.1:8000\";\r\n\r\nconst http_url = \"https://mk-chat-be.herokuapp.com\";\r\nconst ws_url = \"wss://mk-chat-be.herokuapp.com\";\r\n\r\nexport { http_url, ws_url };\r\n","import React, { useState} from \"react\";\r\nimport {SaveUserInfo} from \"../../others/shared_functions\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {userInfoActions} from \"../../store/userInfo-slice\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n    Redirect,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport { http_url} from \"../../others/shared_vars\";\r\n\r\nexport default function Login({loggedIn}) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch(); \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/api-token-auth/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        })\r\n        .then(response => {\r\n            setIsLoading(false);\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            if (data?.token) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (data?.non_field_errors) {\r\n                console.log('error message', data.non_field_errors);\r\n                alert(data.non_field_errors);\r\n            }\r\n        });\r\n    }\r\n    \r\n    function onChange(event, type) {\r\n        if (type === \"username\")\r\n            setUsername(event.target.value);\r\n        else if (type === \"password\") \r\n            setPassword(event.target.value); \r\n    }\r\n\r\n    function VisitorSignIn(type) {\r\n        let username = undefined;\r\n        let password = undefined;\r\n        console.log(type); \r\n        if (type === 1) {\r\n            username = 'visitor1';\r\n            password = '123';\r\n        } else if  (type === 2) {\r\n            username = 'visitor2';\r\n            password = '123';\r\n        }\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/api-token-auth/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setIsLoading(false);\r\n            if (data.token) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (data.non_field_errors) {\r\n                console.log('error message', data.non_field_errors);\r\n                alert(data.non_field_errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    return  (loggedIn? <Redirect to='/' /> \r\n    :\r\n    <div className='login'>\r\n        <form onSubmit={onSubmit} className='login-form'>\r\n            <TextField id=\"outlined-basic\" type=\"text\" placeholder=\"id\" autoComplete=\"username\" onChange={(event)=>onChange(event, 'username')} value={username} />\r\n            <TextField id=\"outlined-password-input\" type=\"password\" autoComplete=\"current-password\"  placeholder=\"password\" onChange={(event)=>onChange(event, 'password')} value={password} />\r\n            <Button variant=\"contained\" type=\"submit\">log in</Button>\r\n        </form>\r\n        <div>do not have an account yet?</div>\r\n        <div className='creat-new-account'><Button variant=\"contained\" onClick={()=>history.push('/register')}>Create a New Account</Button></div>\r\n        <div>want to try the app without registering?</div>\r\n        <div className = 'visitor-sign-in'><Button variant=\"contained\"  onClick={() => VisitorSignIn(1)}>sign in as visitor1</Button></div>\r\n        <div className = 'visitor-sign-in'><Button variant=\"contained\"  onClick={() => VisitorSignIn(2)}>sign in as visitor2</Button></div>\r\n        {isLoading&&<Spinner />}\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SaveUserInfo} from \"../../others/shared_functions\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport {\r\n    Redirect,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport { http_url } from \"../../others/shared_vars\";\r\nimport { userInfoActions } from \"../../store/userInfo-slice\";\r\n\r\nexport default function Registration({loggedIn}) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [password2, setPassword2] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        fetch( http_url + '/chat_app/registration', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password, password2})\r\n        })\r\n        .then(response => {\r\n            setIsLoading(false);\r\n            return response.json();})\r\n        .then(data => {\r\n            console.log(data);\r\n            let keys = Object.keys(data)\r\n            if (keys.find(key => key === \"token\")) {\r\n                SaveUserInfo({username: data.username, token: data.token});\r\n                dispatch(userInfoActions.setUserInfo({username: data.username, token: data.token}));\r\n            } else if (keys.find(key => key === \"error\")) {\r\n                console.log('error message', data.error);\r\n                alert(data.error);\r\n            }\r\n        });\r\n    }\r\n    \r\n    function onChange(event, type) {\r\n        if (type === \"username\")\r\n            setUsername(event.target.value);\r\n        else if (type === \"password\") \r\n            setPassword(event.target.value); \r\n        else if (type == \"password2\")\r\n            setPassword2(event.target.value); \r\n    }\r\n\r\n    if (loggedIn) return <Redirect to='/' />\r\n\r\n    return <>\r\n    <div className = \"registration\">\r\n    {isLoading&&<Spinner/>}\r\n        <form onSubmit={onSubmit}>\r\n            <TextField id=\"outlined-basic\" autoComplete=\"username\" placeholder=\"id\" onChange={(event)=>onChange(event, 'username')} value={username} />\r\n            <TextField id=\"outlined-password-input\" type=\"password\" autoComplete=\"new-password\" placeholder=\"password\" onChange={(event)=>onChange(event, 'password')} value={password} />\r\n            <TextField id=\"outlined-password-input 2\" type=\"password\" autoComplete=\"new-password\" placeholder=\"retype password\" onChange={(event)=>onChange(event, 'password2')} value={password2} />\r\n            <Button variant=\"contained\" type=\"submit\">register</Button>\r\n        </form> \r\n    <div>Already registered? <Button variant=\"contained\" onClick={()=>history.push('/login')}>Go to sign in page</Button></div>  \r\n    </div>\r\n    \r\n    </>;\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/x-lg.db763ca8.svg\";","export default __webpack_public_path__ + \"static/media/info.f4a46c68.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  chats: [],\r\n  friends: [],\r\n  currentChat: null,\r\n  chatHistory: null,\r\n};\r\n\r\nconst statusSlice = createSlice({\r\n  name: \"status\",\r\n  initialState,\r\n  reducers: {\r\n    setChats(state, action) {\r\n      state.chats = action.payload.chats;\r\n    },\r\n    addChat(state, action) {\r\n      state.chats.push(action.payload);\r\n    },\r\n    setFriends(state, action) {\r\n      state.friends = action.payload.friends;\r\n    },\r\n    addFriend(state, action) {\r\n      state.friends.push(action.payload);\r\n    },\r\n    setCurrentChat(state, action) {\r\n      state.currentChat = action.payload;\r\n    },\r\n    setChatHistory(state, action) {\r\n      state.chatHistory = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const statusActions = statusSlice.actions;\r\n\r\nexport default statusSlice;\r\n","import React from \"react\";\r\nimport './Friend.scss';\r\nimport {StringToColor} from '../../others/shared_functions';\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function Friend ({friend, onClickFriend, checked, changeCheck, isFriend, addFriend}) {\r\n    \r\n    const style = {backgroundColor: StringToColor(friend)}; \r\n    \r\n    if (changeCheck || addFriend) {\r\n        return <>\r\n        <div className='friend additional-field' onClick = {() => onClickFriend(friend)}>\r\n            <div>\r\n                <div className='userIcon' style={style}>\r\n                    {friend[0]}\r\n                </div>\r\n                {friend}\r\n            </div>\r\n            {changeCheck&& <input type='checkbox' checked={checked} onChange={changeCheck} />}\r\n            {addFriend&& \r\n                <Button \r\n                    value={friend} \r\n                    disabled={isFriend} \r\n                    onClick={e=>addFriend(e)}\r\n                >\r\n                 {isFriend? 'added': 'add'} \r\n                 </Button>}\r\n        </div>\r\n    </>    \r\n    }\r\n    \r\n    return <>\r\n        <div className='friend' onClick = {() => onClickFriend(friend)}>\r\n            <div className='userIcon' style={style}>\r\n                {friend[0]}\r\n            </div>\r\n            {friend}\r\n        </div>\r\n    </>    \r\n}\r\n\r\n","import React from \"react\";\r\nimport { useSelector} from \"react-redux\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Friend from '../Friend/Friend';\r\n\r\n\r\nexport default function ChatWindowModal(prop) {\r\n    const members = useSelector(state => state.status.chatHistory?.members);\r\n\r\n    if (!members) {\r\n        return null;\r\n    }; \r\n\r\n    return ( <>    \r\n    <Dialog\r\n        open={prop.modalOpen}\r\n        onClose={() => prop.setModalOpenProp(false)}\r\n        container={() => document.querySelector('.chat-window')}\r\n        style={{position: 'absolute'}}\r\n        BackdropProps={{ style: { position: 'absolute' } }}\r\n        componentsProps={{style: { padding: '100' }}}\r\n    >\r\n\r\n        <DialogTitle>members</DialogTitle>\r\n        {members.map(member => <Friend key={member} friend={member} onClickFriend = {() => {return} }/>)}\r\n\r\n    </Dialog>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    useParams,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\nimport TimeAgo from 'timeago-react';\r\nimport xIcon from \"../../icons/x-lg.svg\";\r\nimport infoIcon from \"../../icons/info.svg\";\r\nimport { MobileViewSide } from \"../../others/shared_functions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {statusActions} from \"../../store/status-slice\";\r\nimport TextField from '@mui/material/TextField';\r\nimport ChatWindowModal from '../ChatWindowModal/ChatWindowModal';\r\nimport {GetChatTitle} from '../../others/shared_functions';\r\nimport './ChatWindow.scss'\r\n\r\n\r\nexport default function ChatWindow({inputOn, socket, newChatData, mobileViewSide}) {\r\n\r\n    const { room_id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const chatHistory = useSelector(state => state.status.chatHistory);\r\n    const currentChat = useSelector(state=> state.status.currentChat);\r\n    const chats = useSelector(state => state.status.chats);\r\n\r\n    const [chatTitle, setChatTitle] = useState(null);\r\n    const [content, setContent] = useState('');\r\n    const scroll = useRef(null);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    function setModalOpenProp (value) {\r\n        setModalOpen(value);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        scroll.current.scrollTop = scroll.current.scrollHeight;\r\n    },[chatHistory])\r\n\r\n    useEffect(() => {\r\n        if (mobileViewSide) MobileViewSide(mobileViewSide);}\r\n    ,[mobileViewSide]);  \r\n\r\n    useEffect(()=>{\r\n    if (room_id) {\r\n        dispatch(statusActions.setCurrentChat(room_id));\r\n    }\r\n    else dispatch(statusActions.setCurrentChat(null));\r\n\r\n        return () =>{\r\n            dispatch(statusActions.setCurrentChat(null));\r\n        }\r\n    },[room_id, dispatch])\r\n\r\n    useEffect(()=>\r\n    {\r\n        if (newChatData?.groupName) {\r\n            setChatTitle(newChatData.groupName);\r\n        } else if(newChatData?.members) {\r\n            setChatTitle(newChatData.members[0]);\r\n        } else {\r\n            setChatTitle(GetChatTitle(currentChat, chats, userInfo));\r\n        }\r\n        \r\n    }, [currentChat, newChatData, chats, userInfo]\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (newChatData?.members) {\r\n            let newChatMembers = [...newChatData.members, userInfo.username];\r\n            dispatch(statusActions.setCurrentChat({newChatMembers}));\r\n        }\r\n    }, [newChatData, userInfo.username, dispatch])\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        if(socket && room_id && content.trim().length) {\r\n            if(typeof socket === 'object'){\r\n                if (socket.url) socket.send(JSON.stringify({message: content, room_id}));  \r\n            }\r\n        } else if(socket && newChatData && content.trim().length) {\r\n            console.log(\"new chat sent: \", {...newChatData, message: content});\r\n            socket.send(JSON.stringify({...newChatData, message: content})); \r\n            setDisabled(false);        \r\n        }\r\n        setContent('');\r\n    }\r\n\r\n    function onChange(e) {\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const messages = chatHistory?.messages?.map(message => {\r\n        if (userInfo.username===message.sender) {\r\n            return (\r\n                <div key={message.time} className='message-block self'>\r\n                    <div className = 'container'>\r\n                        <div className='content'>\r\n                            {message.content}\r\n                        </div>\r\n                    </div>\r\n                    <div className='time'>\r\n                        <TimeAgo datetime={message.time}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div key={message.time} className='message-block other'>\r\n                    <div className='sender'>\r\n                        {message.sender}\r\n                    </div>\r\n                    <div className='content'>\r\n                        {message.content}\r\n                    </div>\r\n                    <div className='time'>\r\n                        <TimeAgo datetime={message.time}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className = {`right chat-window`}>\r\n            <div className = {`right-row1 chat-header`}>               \r\n                {(chatHistory || newChatData) && <>\r\n                    <div>\r\n                        <div className={`iconContainer xIconContainer`} onClick={()=>history.push('/')}> \r\n                            <img src={xIcon} className='icon' alt='X icon'/>\r\n                        </div>\r\n                        <div className='chatTitle'>\r\n                        {chatTitle}\r\n                        </div>\r\n                    </div>\r\n                    <div className='iconContainer' onClick={()=>setModalOpen(true)}> \r\n                        <img src={infoIcon} className='icon' alt='info icon'/>\r\n                    </div>\r\n                    </>}\r\n            </div>\r\n            <div className = 'right-row2' ref = {scroll}>\r\n                {messages?messages \r\n                : inputOn? <div className='greyed-out'>send a new message</div>\r\n                : <div className='greyed-out'>There are no messages to display. Please select a chat to display messages.</div>}\r\n            </div>\r\n            <div className = 'right-row3'>\r\n                {\r\n                    (messages||inputOn)&& \r\n                    <form onSubmit = {e => sendMessage(e)} autoComplete=\"off\">\r\n                        <div>\r\n                           <TextField id=\"outlined-basic\" variant=\"outlined\" type=\"text\" disabled={disabled} placeholder='Aa' value={content} onChange={e => onChange(e)} autoFocus={true}/>\r\n                        </div>\r\n                    </form>            \r\n                }\r\n            </div>\r\n            < ChatWindowModal \r\n                modalOpen={modalOpen}\r\n                setModalOpenProp={setModalOpenProp}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/group-icon.eb244b39.svg\";","export default __webpack_public_path__ + \"static/media/arrow-left.83aa775a.svg\";","import React, { useState, useEffect} from \"react\";\r\nimport {\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport ChatWindow from \"../ChatWindow/ChatWindow\";\r\nimport Friend from \"../Friend/Friend\";\r\nimport { MobileViewSide } from \"../../others/shared_functions\";\r\nimport { useSelector} from \"react-redux\";\r\nimport xIcon from \"../../icons/x-lg.svg\";\r\nimport groupIcon from \"../../icons/group-icon.svg\";\r\nimport  {Button, TextField }  from '@mui/material';\r\nimport arrowLeftIcon from \"../../icons/arrow-left.svg\";\r\nimport './NewChat.scss'\r\nimport { QueryStringGenerator } from \"../../others/shared_functions\"; \r\n\r\nconst sections = ['new_message','add_participants','add_title', 'send_message'];\r\n\r\nexport default function NewChat ({ socket, onClickFriend,  mobileViewSide}) {\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const friends = useSelector(state => state.status.friends);\r\n\r\n  let queryParams = new URLSearchParams(location.search);\r\n  let queryParamsSection = queryParams.get('section')? queryParams.get('section').trim() : '';\r\n  let queryParamsMembers = queryParams.getAll('members');\r\n  let queryParamsGroupName = queryParams.get('group_name')? queryParams.get('group_name').trim() : '';\r\n\r\n  if (!sections.includes(queryParamsSection)) {\r\n    queryParamsSection = 'new_message';\r\n  }\r\n\r\n  switch(queryParamsSection) {\r\n    case 'new_message':\r\n      queryParamsMembers = [];\r\n      queryParamsGroupName = '';\r\n      break;\r\n    case 'send_message':\r\n\r\n      queryParamsMembers = queryParamsMembers.filter(member => friends.includes(member));\r\n\r\n      if (!queryParamsGroupName && queryParamsMembers.length === 1) {\r\n        // need to check if a chat room already exists for the member\r\n        break; \r\n      } else if (queryParamsGroupName && queryParamsMembers.length > 1) {\r\n        console.log('yes!!')\r\n        break\r\n      } else {\r\n        queryParamsSection = 'new_message';\r\n        queryParamsMembers = [];\r\n      }\r\n      break;\r\n    default:\r\n      queryParamsMembers = queryParamsMembers.filter(member => friends.includes(member));  \r\n  }\r\n\r\n  console.log('\\nsection is', queryParamsSection);\r\n\r\n  const [section, setSection] = useState(queryParamsSection);\r\n  const [groupName, setGroupName] = useState(queryParamsGroupName);\r\n  const [checkedUsers, setCheckedUsers] = useState(queryParamsMembers);\r\n\r\n  const [newChatData, setNewChatData] = useState({\r\n    newChat: true,\r\n    groupName: null,\r\n    members: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    let queryParamsSection = queryParams.get('section')? queryParams.get('section').trim() : '';\r\n    let queryParamsMembers = queryParams.getAll('members');\r\n    let queryParamsGroupName = queryParams.get('group_name')? queryParams.get('group_name').trim() : '';\r\n  \r\n    if (!sections.includes(queryParamsSection)) {\r\n      queryParamsSection = 'new_message'\r\n    }\r\n  \r\n    switch(queryParamsSection) {\r\n      case 'new_message':\r\n        queryParamsMembers = [];\r\n        queryParamsGroupName = '';\r\n        break;\r\n      case 'send_message':\r\n        \r\n        queryParamsMembers = queryParamsMembers.filter(member => friends.includes(member));\r\n\r\n        if (!queryParamsGroupName && queryParamsMembers.length === 1) {\r\n          // need to check if a chat room already exists for the member\r\n          break; \r\n        } else if (queryParamsGroupName && queryParamsMembers.length > 1) {\r\n          console.log('yes!!')\r\n          break\r\n        } else {\r\n          queryParamsSection = 'new_message';\r\n          queryParamsMembers = [];\r\n        }\r\n        break;\r\n      default:\r\n        queryParamsMembers = queryParamsMembers.filter(member => friends.includes(member));  \r\n    }\r\n\r\n    setSection(queryParamsSection);\r\n    setGroupName(queryParamsGroupName);\r\n    setCheckedUsers(queryParamsMembers);\r\n\r\n  }, [location.search, friends])\r\n\r\n  useEffect(() => {\r\n    setNewChatData( (prev) => {return {...prev, groupName, members: checkedUsers}})\r\n  }, [checkedUsers, groupName])\r\n\r\n\r\n  useEffect(() => {\r\n    if (mobileViewSide) MobileViewSide(mobileViewSide);}\r\n    ,[mobileViewSide]);  \r\n\r\n\r\n  function ChangeCheck(user) {\r\n    if (checkedUsers.find(e => e == user)) {\r\n      console.log(user, 'unchecking')\r\n      setCheckedUsers(checkedUsers.filter(e => e !== user));\r\n    } else {\r\n      console.log(user, 'checking')\r\n      setCheckedUsers(checkedUsers.concat([user]));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    MobileViewSide('right');\r\n  },[section]);\r\n\r\n\r\n  function JumpToSendMessage(e) {\r\n    e.preventDefault();\r\n    if (!groupName?.trim()) return;\r\n    history.push(\"newchat?\" + QueryStringGenerator('send_message', checkedUsers, groupName, friends));\r\n  }\r\n\r\n  const new_message = (\r\n    <div className='NewChat right'>\r\n      <div className='right-row1'>\r\n        <div className='iconContainer xIconContainer' onClick={()=>history.push('/')}> \r\n            <img src={xIcon} className='icon' alt=\"x icon\"/>\r\n        </div>\r\n        <div >\r\n          New message\r\n        </div>\r\n      </div>\r\n      <div className='right-row2'>\r\n        <div className = 'create-new-group' onClick={()=>history.push('/newchat?section=add_participants')}>\r\n          <div className='iconContainer group'> \r\n              <img src={groupIcon} className='icon' alt=\"group icon\"/>\r\n          </div>\r\n          <div >\r\n            Create a New Group\r\n          </div>\r\n        </div>\r\n        <div className=\"suggested\">\r\n          Suggested:\r\n        </div>\r\n        {friends?.map(friend => { return (\r\n          <Friend friend = {friend} onClickFriend={onClickFriend}/>\r\n        );})}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const add_participants = (\r\n    <div className='NewChat AddParticipants right'>\r\n      <div className='right-row1'>\r\n        <div>\r\n          <div className='iconContainer' onClick={() => history.push('/newchat?section=new_message')}> \r\n              <img src={arrowLeftIcon} className='icon' alt=\"left arrow\"/>\r\n          </div>\r\n          Add Participants\r\n        </div>\r\n        <Button id='next-button' onClick={()=> history.push('/newchat?' + QueryStringGenerator('add_title', checkedUsers, null, friends))} disabled={checkedUsers.length < 2}>\r\n          NEXT\r\n        </Button>       \r\n      </div>\r\n      <div className='right-row2'>\r\n        {friends?.map(friend => {\r\n          return (<>\r\n            <div className='friend-checkbox-container'>\r\n              <Friend \r\n              friend = {friend}  \r\n              onClickFriend = {() => null}\r\n              checked={checkedUsers.find(user => user === friend)} \r\n              changeCheck={() => ChangeCheck(friend)}\r\n              />\r\n            </div>\r\n            </>);})}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const add_title = (\r\n    <div className = 'NewChat AddTitle right'>\r\n      <div className='right-row1'>\r\n        <div>\r\n            <div className='iconContainer' onClick={() => history.push(\"/newchat?section=add_participants\")}> \r\n                <img src={arrowLeftIcon} className='icon' alt='left arrow'/>\r\n            </div>\r\n            Add Title\r\n          </div>\r\n          <Button id='create-button' onClick={()=> history.push('/newchat?' + QueryStringGenerator('send_message', checkedUsers, groupName, friends))} disabled={!groupName.trim()}>\r\n            CREATE\r\n          </Button> \r\n\r\n      </div>\r\n      <div className='right-row2'>\r\n        <form id=\"form1\"  onSubmit={(e)=>{JumpToSendMessage(e)}}>\r\n          <div className='text-field-container'>\r\n            <TextField variant=\"standard\" type='text' placeholder='Group Name (Required)' required=\"required\" value={groupName} onChange={e=>setGroupName(e.target.value)} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n    \r\n  const send_message = <>\r\n    <ChatWindow \r\n    inputOn={true} \r\n    newChatData={newChatData}\r\n    socket={socket}\r\n    />\r\n  </>;\r\n    \r\n  const page = \r\n  section === 'new_message'? new_message\r\n  : section === 'add_participants'? add_participants\r\n  : section === 'add_title'? add_title\r\n  : section === 'send_message'? send_message\r\n  : null; \r\n\r\n  return page; \r\n  }\r\n  \r\n  ","import React, { useState, useEffect} from \"react\";\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport Friend from \"../Friend/Friend\";\r\nimport { MobileViewSide } from \"../../others/shared_functions\";\r\nimport { http_url} from \"../../others/shared_vars\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { statusActions } from \"../../store/status-slice\";\r\nimport xIcon from \"../../icons/x-lg.svg\"\r\nimport  {TextField }  from '@mui/material';\r\nimport './AddFriend.scss'\r\n\r\n\r\nexport default function AddFriend () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(statusActions.setChatHistory(null));\r\n\r\n    const [query, setQuery] = useState(undefined);\r\n    const [suggestions, setSuggestions] = useState(undefined);\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n\r\n    useEffect(()=>{\r\n        MobileViewSide('right');\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        fetch( http_url + '/chat_app/add_friend?' + new URLSearchParams({username: query}), {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token,},\r\n        })\r\n        .then(response => {\r\n            if (response.ok) return response.json()\r\n            else return null\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            setSuggestions(data);\r\n        });   \r\n    }\r\n    ,[query, userInfo.token])\r\n\r\n    function onChange(e) {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        fetch( http_url + '/chat_app/add_friend?' + new URLSearchParams({username: query}), {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token,},\r\n        })\r\n        .then(response => {\r\n            if (response.ok) return response.json()\r\n            else return null\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            setSuggestions(data);\r\n        });\r\n    }\r\n\r\n    function onClick(e) {\r\n        let username = e.target.value;\r\n        let new_suggestion;\r\n        fetch( http_url + '/chat_app/add_friend', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': 'token '+ userInfo.token},\r\n            body: JSON.stringify({username})\r\n        })\r\n        .then(response => {console.log(response.status, response.ok); if (response.ok)response.json()})\r\n        .then(data => {\r\n            console.log(data);\r\n            new_suggestion = suggestions.map(suggestion => {\r\n                if (suggestion.username === username) return {username, isFriend: true}\r\n                return suggestion;\r\n            })\r\n            setSuggestions(new_suggestion);\r\n            dispatch(statusActions.addFriend(username));\r\n        });\r\n    } \r\n \r\n    const searchResult = <div className=\"right-row2>\">\r\n        {suggestions?.map(suggestion => <>\r\n            <Friend \r\n            friend={suggestion.username}\r\n            onClickFriend={()=>null}\r\n            isFriend={suggestion.isFriend}\r\n            addFriend={onClick}\r\n            />\r\n        </>\r\n        )}\r\n    </div>;\r\n\r\n    return <>\r\n    <div className=\"right add-friend\">\r\n        <div className=\"right-row1\">\r\n            <div className='iconContainer xIconContainer' onClick={()=>history.push('/')}> \r\n                <img src={xIcon} className='icon' alt='X'/>\r\n            </div>\r\n            <div >\r\n                Add friends\r\n            </div>\r\n        </div>\r\n        <div className='right-row2'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='text-field-container'>\r\n                    <TextField variant=\"standard\" type='text' placeholder='search by username' required=\"required\" value={query}  onChange = {e=>onChange(e)} />\r\n                </div>\r\n            </form>\r\n        {searchResult}\r\n        </div>\r\n    </div>\r\n    </>;\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\n\r\nimport {StringToColor} from '../../others/shared_functions';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport default function Chat({chat}) {\r\n    const history = useHistory();\r\n    const userInfo = useSelector(state => state.userInfo);\r\n    const path = \"/room/\" + chat.id;\r\n    const chatName = chat.name? chat.name \r\n    : chat.members?.length === 2 ? chat.members.find(member => member !== userInfo.username)\r\n    : undefined;\r\n\r\n    let otherMembers = chat?.members.filter(member => member !== userInfo.username);\r\n    \r\n    if (otherMembers?.length > 1) otherMembers = otherMembers.slice(0, 2);\r\n \r\n\r\n    return <>\r\n      <div className='chat' onClick={()=>history.push(path)}>      \r\n        {otherMembers.length > 1 ? (\r\n          <div className = 'userIcon group'> \r\n          {otherMembers.map(member => <div key={member} className='userIcon small' style = {{backgroundColor: StringToColor(member)}}> {member[0]} </div>)}\r\n          </div>\r\n          )\r\n        : otherMembers.map(member => \r\n        <div key={member} className='userIcon' style = {{backgroundColor: StringToColor(member)}}> \r\n          {member[0]} \r\n        </div>)}\r\n        {chatName}\r\n      </div>\r\n    </>\r\n}","import React from \"react\";\r\nimport Friend from \"../Friend/Friend\"\r\nimport Chat from \"../Chat/Chat\"\r\nimport { useSelector} from \"react-redux\";\r\n\r\n\r\nexport default function ChatPeopleList({showChat, setChatHistoryProp, onClickFriend}) {\r\n\r\n   const chats = useSelector(state => state.status.chats);\r\n   const friends = useSelector(state => state.status.friends);\r\n\r\n   if (showChat) {\r\n      if (chats) {\r\n         return chats.map(chat => {\r\n            return <Chat key={chat.id} chat = {chat} setChatHistoryProp = {setChatHistoryProp}/>\r\n         });     \r\n      } \r\n      return 'no chats';\r\n   } \r\n   \r\n   if (friends) {\r\n      return friends.map(friend => {\r\n         return <Friend key={friend} friend = {friend} onClickFriend={onClickFriend}/>\r\n      })\r\n   }\r\n   return 'no friends';\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/chat-fill.c06d5871.svg\";","export default __webpack_public_path__ + \"static/media/people-fill.1ec4cb9a.svg\";","import React from \"react\";\r\nimport './ChatPeopleToggle.css'; \r\nimport chat_fill from '../../icons/chat-fill.svg'\r\nimport people_fill from '../../icons/people-fill.svg'\r\n\r\nexport default function ChatPeopleToggle({ChatPeopleSwitch}) {\r\n\r\n    return <div className = 'ChatPeopleToggle'>\r\n        <div onClick={() => ChatPeopleSwitch(true)}>\r\n            <img className='chat_fill' src={chat_fill} alt=\"Chat logo\"/>\r\n            <div>Chat</div>\r\n        </div>\r\n        <div onClick={() => ChatPeopleSwitch(false)}>\r\n            <img className='people_fill' src={people_fill} alt=\"People logo\"/>\r\n            <div>People</div>\r\n        </div>\r\n    </div>;\r\n}","export default __webpack_public_path__ + \"static/media/log-out.a1f930e4.svg\";","export default __webpack_public_path__ + \"static/media/pencil-fill.8f9e674f.svg\";","export default __webpack_public_path__ + \"static/media/person-plus-fill.57f5c296.svg\";","import ChatPeopleList from \"../ChatPeopleList/ChatPeopleList\";\r\nimport ChatPeopleToggle from \"../ChatPeopleToggle/ChatPeopleToggle\";\r\nimport React, { useState} from \"react\";\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { SaveUserInfo, StringToColor } from \"../../others/shared_functions\";\r\nimport logoutIcon from \"../../icons/log-out.svg\";\r\nimport pencilIcon from \"../../icons/pencil-fill.svg\";\r\nimport personPlusIcon from \"../../icons/person-plus-fill.svg\";\r\nimport xIcon from \"../../icons/x-lg.svg\";\r\nimport { http_url } from \"../../others/shared_vars\";\r\nimport { useSelector} from \"react-redux\";\r\nimport './Main.scss';\r\n\r\nexport default function Main ({setChatHistoryProp, rooms, onClickFriend}) {\r\n  const history = useHistory();\r\n  const userInfo = useSelector(state => state.userInfo);\r\n  const [showChat, setShowChat] = useState(true);\r\n\r\n  function ChatPeopleSwitch(value) {\r\n    setShowChat(value);\r\n  }\r\n\r\n  function logout(){\r\n    SaveUserInfo();\r\n    fetch(http_url + '/chat_app/logout', \r\n    {\r\n      headers: {\r\n        'authorization': \"token \" + userInfo.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('logged out');\r\n      console.log(data);\r\n      window.location.reload();\r\n    }).catch(error => console.error(error));\r\n  }\r\n\r\n  const profilePage = \r\n    <div className = 'profile-page'>\r\n      <div className = 'profile-header'>\r\n        <div className = 'profile-header-left'>\r\n          <div className='iconContainer' onClick={()=>ProfileOn(false)}>\r\n            <img src={xIcon} className='icon' alt='X icon' />\r\n          </div>\r\n          <div>\r\n            Me\r\n          </div>\r\n        </div>\r\n        <div className='iconContainer' onClick={async () => await logout()}>\r\n          <img src={logoutIcon} className='icon' alt='log out'/>\r\n        </div>\r\n      </div>\r\n      <div className='userIcon large' style={{backgroundColor: StringToColor(userInfo.username)}}>\r\n        {userInfo.username[0]}\r\n      </div>\r\n      <div className = 'profile-username'>\r\n        {userInfo.username}\r\n      </div>\r\n\r\n    </ div>;\r\n  \r\n  function ProfileOn(state) {\r\n    let profile = document.querySelector('.profile-page');\r\n    if (state) profile.style.display = 'block';\r\n    else profile.style.display = 'none';\r\n  }\r\n\r\n  return (\r\n    <div className = 'left Main'>\r\n      {profilePage}\r\n      <div className='left-row1'>\r\n        <div className = \"Header\">\r\n          <div className = 'Header-left'>\r\n            <div className='userIcon' style={{backgroundColor: StringToColor(userInfo.username)}} onClick={()=>ProfileOn(true)}>\r\n                {userInfo.username[0]}\r\n            </div>\r\n            {showChat? 'Chats' : 'People'}\r\n          </div>\r\n          <div className='buttons'>\r\n            <div className='iconContainer' onClick={()=>history.push('/addfriend')}>\r\n              <img src={personPlusIcon} className='icon' alt='add friend icon' />\r\n            </div>\r\n            <div className='iconContainer' onClick={()=>history.push('/newchat?section=new_message')}>\r\n              <img src={pencilIcon} className='icon' alt='pencil icon'/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div className='left-row2'>\r\n          <ChatPeopleList onClickFriend={onClickFriend} showChat={showChat} setChatHistoryProp={setChatHistoryProp} rooms={rooms}/> \r\n        </div>\r\n        <div className='left-row3'>\r\n          <ChatPeopleToggle ChatPeopleSwitch={ChatPeopleSwitch}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// import counterReducer from \"./counter\";\r\n// import authReducer from \"./auth\";\r\nimport userInfoSlice from \"./userInfo-slice\";\r\nimport statusSlice from \"./status-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    userInfo: userInfoSlice.reducer,\r\n    status: statusSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport NewChat from \"./components/NewChat/NewChat\";\r\nimport AddFriend from \"./components/AddFriend/AddFriend\";\r\nimport Spinner from \"./components/Spinner/Spinner\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport ChatWindow from \"./components/ChatWindow/ChatWindow\";\r\nimport Main from \"./components/Main/Main\";\r\nimport { http_url, ws_url } from \"./others/shared_vars\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchUserInfo, GeneralUpdate } from \"./store/userInfo-actions\";\r\nimport { statusActions } from \"./store/status-slice\";\r\n\r\nexport default function App() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  const chats = useSelector((state) => state.status.chats);\r\n  const currentChat = useSelector((state) => state.status.currentChat);\r\n  const chatHistory = useSelector((state) => state.status.chatHistory);\r\n\r\n  const [socket, setSocket] = useState({});\r\n\r\n  // open and close socket\r\n  useEffect(() => {\r\n    if (!userInfo.token) {\r\n      return;\r\n    }\r\n    dispatch(GeneralUpdate());\r\n    const tempSocket = new W3CWebSocket(\r\n      ws_url + \"/ws/chat/?token=\" + userInfo.token\r\n    );\r\n    setSocket(tempSocket);\r\n\r\n    return () => {\r\n      if (\"close\" in tempSocket) {\r\n        console.log(\"closing socket\", tempSocket);\r\n        tempSocket.close();\r\n        setSocket({});\r\n      }\r\n    };\r\n  }, [userInfo.token, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserInfo());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentChat && userInfo.token) {\r\n      // used for setting chat info just before sending a new message to create a new chat\r\n      // if (\"newChatMembers\" in currentChat) {\r\n      if (Object.keys(currentChat).find((key) => key === \"newChatMembers\")) {\r\n        let members = [...currentChat.newChatMembers];\r\n        dispatch(statusActions.setChatHistory({ members }));\r\n        return;\r\n      }\r\n\r\n      fetch(http_url + \"/chat_app/chat_update/\" + currentChat, {\r\n        headers: { authorization: \"token \" + userInfo.token },\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) return response.json();\r\n          else {\r\n            history.replace(\"/\");\r\n          }\r\n        })\r\n        .then((data) => dispatch(statusActions.setChatHistory(data)))\r\n        .catch((error) => console.error(error));\r\n    } else dispatch(statusActions.setChatHistory(null));\r\n  }, [currentChat, userInfo, dispatch, history]);\r\n\r\n  useEffect(() => {\r\n    if (socket.url) {\r\n      socket.onopen = () => {\r\n        console.log(\"connected to websocket\");\r\n      };\r\n\r\n      socket.onmessage = (e) => {\r\n        console.log(\"onmessage via websocket\");\r\n        const data = JSON.parse(e.data);\r\n        console.log(data);\r\n\r\n        if (data.newChat && data.room) {\r\n          dispatch(statusActions.addChat(data.room));\r\n          console.log(\"new room added\", data.room);\r\n          if (data.sender === userInfo?.username)\r\n            history.replace(`room/${data.room.id}`);\r\n        } else if (data.message.room_id == currentChat && chatHistory) {\r\n          dispatch(\r\n            statusActions.setChatHistory({\r\n              ...chatHistory,\r\n              messages: [...chatHistory.messages, data.message],\r\n            })\r\n          );\r\n          console.log(\"new message appended\");\r\n        }\r\n      };\r\n    }\r\n    // return () => {\r\n    //   console.log(\"resetting socket onopen and onmessage\");\r\n    //   socket.onopen = () => null;\r\n    //   socket.onmessage = () => null;\r\n    // };\r\n  }, [socket, currentChat, chatHistory, chats, userInfo, dispatch, history]);\r\n\r\n  function onClickFriend(user) {\r\n    let chat_id = chats?.find(\r\n      (chat) =>\r\n        chat.members.length === 2 &&\r\n        chat.members.find((member) => member === user)\r\n    )?.id;\r\n\r\n    if (chat_id) {\r\n      history.push(`/room/${chat_id}`);\r\n    } else {\r\n      console.log(\"redirect\", chat_id);\r\n      history.push(`/newchat?section=send_message&members=${user}`);\r\n    }\r\n  }\r\n\r\n  if (userInfo.isLoading) {\r\n    return (\r\n      <>\r\n        <Spinner />\r\n        <div>it may take up to 20 seconds to load the app...</div>\r\n      </>\r\n    );\r\n  } else if (!userInfo.token) {\r\n    return (\r\n      <>\r\n        <Route path=\"/login\">\r\n          <Login userInfo={null} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Registration userInfo={null} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/login\" />\r\n        </Route>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Main mobileViewSide={\"left\"} onClickFriend={onClickFriend} />\r\n      <Route exact path=\"/\">\r\n        {userInfo.token ? (\r\n          <ChatWindow mobileViewSide={\"left\"} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/room/:room_id\">\r\n        <ChatWindow socket={socket} mobileViewSide={\"right\"} />\r\n      </Route>\r\n      <Route path=\"/newchat\">\r\n        <NewChat\r\n          socket={socket}\r\n          onClickFriend={onClickFriend}\r\n          mobileViewSide={\"right\"}\r\n        />\r\n      </Route>\r\n      <Route path=\"/addfriend\">\r\n        <AddFriend mobileViewSide={\"right\"} />\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login loggedIn={true} />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Registration loggedIn={true} />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n","import { userInfoActions } from \"./userInfo-slice\";\r\nimport { statusActions } from \"./status-slice\";\r\nimport { http_url } from \"../others/shared_vars\";\r\nimport store from \"./index\";\r\n\r\nexport const fetchUserInfo = () => {\r\n  return async (dispatch) => {\r\n    if (typeof Storage === \"undefined\") {\r\n      console.log(\"storage undefined\");\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!localStorage.ChatUserInfo) {\r\n      console.log(\"localStorage.ChatUserInfo is undefined\");\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    }\r\n\r\n    const fetchData = async (storedInfo) => {\r\n      console.log(\"stored info\", storedInfo);\r\n      const response = await fetch(http_url + \"/chat_app/user_check\", {\r\n        method: \"GET\",\r\n        headers: { Authorization: \"token \" + storedInfo.token },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch user info!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.username) {\r\n        throw new Error(\"user check failed\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    const storedInfo = JSON.parse(localStorage.ChatUserInfo);\r\n\r\n    try {\r\n      const userData = await fetchData(storedInfo);\r\n      console.log(\"userData\", userData);\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: userData.username,\r\n          token: storedInfo.token,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error.message, \"fetchUserInfo failed\");\r\n\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          username: null,\r\n          token: null,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const GeneralUpdate = () => {\r\n  return async (dispatch) => {\r\n    const state = store.getState();\r\n    console.log(\"general update state\", state);\r\n    const fetchData = async () => {\r\n      const response = await fetch(http_url + \"/chat_app/general_update\", {\r\n        method: \"GET\",\r\n        headers: { Authorization: \"token \" + state.userInfo.token },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"GeneralUpdate failed\");\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      console.log(\"\\n\\n\\n general update \\n\\n\\n\");\r\n      const data = await fetchData();\r\n      console.log(data.rooms);\r\n      console.log(data.friends);\r\n      dispatch(\r\n        statusActions.setChats({\r\n          chats: data.rooms,\r\n        })\r\n      );\r\n      dispatch(\r\n        statusActions.setFriends({\r\n          friends: data.friends,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error.message, \"GeneralUpdate failed\");\r\n    }\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Switch, HashRouter } from \"react-router-dom\";\r\nimport store from \"./store/index.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <App />\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}